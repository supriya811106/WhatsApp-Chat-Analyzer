09/09/2023, 11:16 am - Messages and calls are end-to-end encrypted. No one outside of this chat, not even WhatsApp, can read or listen to them. Tap to learn more.
09/09/2023, 11:16 am - Supriya created group "C"
09/09/2023, 11:16 am - Supriya added you
09/09/2023, 11:16 am - Nimisiiyaaaa: Which of the following may cause Random Forest to over fit the data? 1) Increase Number of Trees

2) Increase Depth of Tree

3) Decrease Learning Learning Rate
09/09/2023, 11:16 am - Supriya: Which of the following may cause Random Forest to over fit the data?

1) Increase Number of Trees

2) Increase Depth of Tree

3) Decrease Learning Learning Rate
09/09/2023, 11:17 am - Supriya: The following set of equations has infinite solutions, if a =?

x + y + z = 1

ax-ay + 3z = 5

5x-3y+ az = 6
09/09/2023, 11:17 am - Supriya: Let A be the 2 x 2 matrix with elements a11 = a12 = a21 = +1 and a22 = -1. Then the eigenvalues of the matrix A19 are:
09/09/2023, 11:18 am - Supriya: For random variables X and Y, we have Var(X)=1, Var(Y)=4, and Var(2X-3Y)=34, then the correlation between X and Y is:
09/09/2023, 11:19 am - Supriya: A 3-input neuron has weights 1, 4 and 3. The transfer function is linear with the constant of proportionality being equal to 3. The inputs are 4, 8 and 5 respectively. What will be the output?
09/09/2023, 11:19 am - Supriya: When classifying data with logistic classification, what is the upper bound of the likelihood in the maximum likelihood method? Is this value attainable?
09/09/2023, 11:20 am - Supriya: Which of the following would indicate that a dataset is not bell-shaped?
09/09/2023, 11:21 am - Supriya: Suppose you have a dataset with m=50 examples and n=200000 features for each example. You want to use multivariate linear regression to fit the parameters to our data. Should you prefer gradient descent or the normal equation?
09/09/2023, 11:21 am - Supriya: Which of the following statements is true about PCA?

(i) We must standardize the data before applying

(ii) We should select the principal components which explain the highest variance

(iii) We should select the principal components which explain the lowest variance (iv) We can use PCA for visualizing the data in lower dimensions
09/09/2023, 11:22 am - Supriya: Select an option

a) (i), (ii) and (iv).

b) (ii) and (iv)

c) iii) and (iv)

d) (i) and (iii)
09/09/2023, 11:23 am - Supriya: If the characteristic equation of a matrix A is t²-t-1=0 then
09/09/2023, 11:23 am - Supriya: Select an option

a) The range is equal to 5 standard deviations.

O

b) The range is larger than the interquartile range.

c) The mean is much smaller than the median.

d) There are no outliers.
09/09/2023, 11:24 am - Supriya: Select an option

a) 1, Yes

b) e, No

c) 1, No

d) 0, Yes
09/09/2023, 11:24 am - Supriya: 8th
09/09/2023, 11:24 am - Supriya: 7th
09/09/2023, 11:25 am - Supriya: Select an option

a A ^ - 1 does not exist

b A ^ - 1 exists but cannot be determined from the data

c) A ^ - 1 = A - 1

d) A ^ - 1 = A + 1
09/09/2023, 11:25 am - Supriya: Question 12

The number of solutions for each of the following system of equations is:

2x+y-z=4

x-2y+z=-2

-x+2y-z=2
09/09/2023, 11:26 am - Supriya: Select an option

A) 0

B) 1

C) Inf

D) Can't be determined
09/09/2023, 11:26 am - Supriya: Question 13


Assume we are trying to fit the data coming from a cubic function which is corrupted by standard Gaussian noise, using a linear and 5th degree polynomial. Let M1 and M5 denote the models corresponding to the linear and 5th degree polynomial. Then,
09/09/2023, 11:27 am - Supriya: Select an option

a) Bias(M1)≤Bias (M5), Variance(M1) sVariance(M5).

O

b) Bias(M1)≥Bias (M5), Variance(M1) ≤Variance(M5).


c) Bias(M1)<Bias(M5), Variance(M1)>Variance(M5).

d) Bias (M1)>Bias (M5), Variance(M1) > Variance(M5).
09/09/2023, 11:28 am - Supriya: Question 15


You have two coins. One of them is fair and comes up heads with probability 1/2 and the other is biased and comes up heads with probability 3/4. You randomly pick a coin and flip it twice. You get heads both times. What is the probability that you picked the fair coin?
09/09/2023, 11:28 am - Supriya: Select an option

a) we would choose a higher p-value

b) we would choose a lower p-value

c) we would choose the same p-value

d) false negatives do not depend on p-value
09/09/2023, 11:30 am - Supriya: Question 14

If rank(A) is 2 and rank(AB) is 3, then
09/09/2023, 11:30 am - Supriya: Select an option

a) rank(B) = 3

b) rank(B) <= 3

c) rank(B) >= 3

d) data insufficient
09/09/2023, 11:30 am - Supriya: Question 16


The eigen values of a 4x4 square matrix having 0's as the diagonal elements and 1's on the off diagonal elements
09/09/2023, 11:31 am - Supriya: Select an option

a) 2, -2, 0, 0

b) 1, -1, 1, -1

c) 3,-1,-1, -1

d) 4, 0, 0, 0
09/09/2023, 11:32 am - Supriya: Question 17


In medical screening, it is sometimes more important to avoid false negatives than false positives. file, we want to be sure to detect a disease if present). How would this affect the p-value we might use for a medical test
09/09/2023, 11:32 am - Supriya: Select an option

a) we would choose a higher p-value

O

b) we would choose a lower p-value

c) we would choose the same p-value


d) false negatives do not depend on p-value
09/09/2023, 11:32 am - Supriya: Let M and S² be the mean and variance of a random sample of size > 1 respectively from a normal population with an unknown mean μ and unknown finite variance o²>0. Consider the following statements: 1) S2 is an unbiased estimator of o², and S is an unbiased estimator of o. 2) ((n-1)/n)M is an unbiased estimator of µ, and ((n-1)/n)S² is an unbiased estimator of o². Which of the following statements is/are true?
09/09/2023, 11:33 am - Supriya: Select an option

a) 1 only

b) 2 only

d) Both 1 and 2

d) Neither 1 nor 2
09/09/2023, 11:33 am - Supriya: Question 19

Given y = xx, what is dy/dx at x = 2 ?
09/09/2023, 11:34 am - Supriya: Select an option

A) 4(1+log2)

B) 4(2+log2)

C) 4


D) 8
09/09/2023, 11:34 am - Supriya: Question 20

Two squares are chosen at random on a chessboard. What is the probability that they have a side in common?
09/09/2023, 11:34 am - Supriya: Select an option

a) 8/13

b) 17/18

c) 5/13

d) 1/18
09/09/2023, 11:38 am - Supriya: Question 22


Mean, Median and Mode

Given 'n' integers, find their mean, median and mode.

You are required to fill in a function that takes as inputs an integer 'input1' (1 <= input1 <= 1000) and an integer array input2[], containing "input1' integers, and returns output1 as the mean, output2 as the median and output3 as the mode.

The mean and median must be correct to six decimal places.

Mean:

Defined as the average of all numbers in the array

Median:

Defined as the middle element of the array.

If n is even, the median is the average of the two middle elements.

If n is odd, the median is the middle element of the array

Note: For finding the median, elements in the array have to be listed in numerical order from smallest to largest

Mode:

Defined as the number in the array with the highest frequency. If many numbers have the same highest frequency, then the mode is calculated by breaking ties in favour of the smallest of the numbers.
09/09/2023, 11:39 am - Supriya: Input Specification:

input1: Integer in the range of 1 <= input1 <= 1000, denoting length of input array. input2: Integer input array

Output Specification:

Return output1 (double) variable as the mean

Return output2 (double) variable as the median. Return output3 (int) variable as the mode.

Example 1:

input1:3

input2: (1,2,3)

Output: 2.000000, 2.000000, 1

Example 2:

input1: 5

input2: (41,18467,6334.26500.19169)

Output: 14102.200000, 18467.000000, 41
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:42 am - Nimisiiyaaaa: <Media omitted>
09/09/2023, 11:47 am - Nimisiiyaaaa: #include <iostream>
#include <vector>
#include <climits>

using namespace std;

int minCostToReachDestination(int N, vector<int>& A) {
    vector<int> min_cost(N, INT_MAX);
    min_cost[0] = 0;

    for (int i = 1; i < N; ++i) {
        for (int j = 1; j <= min(i + 1, 3); ++j) {
            min_cost[i] = min(min_cost[i], min_cost[i - j] + abs(A[i] - A[i - j]));
        }
    }

    return min_cost[N - 1];
}

int main() {
    int N = 6;
    vector<int> A = {4, 12, 13, 18,10,12};
    int result = minCostToReachDestination(N, A);
    cout << result << endl;
    return 0;
}
09/09/2023, 11:52 am - Nimisiiyaaaa: #include <iostream>
#include <algorithm>

using namespace std;

int minFlightCost(int input1, int input2[]) {
    int dp[input1];
    
    // Initialize the dp array with the cost of the first city.
    dp[0] = input2[0];
    
    // Calculate the minimum cost for each city.
    for (int i = 1; i < input1; i++) {
        dp[i] = min(dp[i - 1] + input2[i], (i >= 3 ? dp[i - 3] + abs(input2[i] - input2[i - 2]) : INT_MAX));
    }
    
    return dp[input1 - 1];
}

int main() {
    int input1;
    cin >> input1;
    
    int input2[input1];
    for (int i = 0; i < input1; i++) {
        cin >> input2[i];
    }
    
    int result = minFlightCost(input1, input2);
    cout << result << endl;
    
    return 0;
}
09/09/2023, 12:02 pm - Supriya: #include <iostream>
#include <vector>
#include <map>
#include <algorithm>

struct Result {
    double output1;  // mean
    double output2;  // median
    int output3;     // mode
};

Result mmm(int input1, const std::vector<int>& input2) {
    Result result;

    // Calculate mean (output1)
    int sum = 0;
    for (int num : input2) {
        sum += num;
    }
    result.output1 = (double)sum / input1;

    // Calculate median (output2)
    std::vector<int> sortedData = input2;
    std::sort(sortedData.begin(), sortedData.end());
    if (input1 % 2 == 0) {
        result.output2 = (sortedData[input1 / 2 - 1] + sortedData[input1 / 2]) / 2.0;
    } else {
        result.output2 = sortedData[input1 / 2];
    }

    // Calculate mode (output3)
    std::map<int, int> frequency;
    for (int num : input2) {
        frequency[num]++;
    }
    int max_count = 0;
    for (auto &[num, freq] : frequency) {
        if (freq > max_count) {
            max_count = freq;
            result.output3 = num;
        }
    }

    return result;
}

int main() {
    int n;
    std::cout << "Enter number of elements: ";
    std::cin >> n;

    std::vector<int> data(n);
    std::cout << "Enter the elements: ";
    for (int i = 0; i < n; i++) {
        std::cin >> data[i];
    }

    Result result = mmm(n, data);

    std::cout << "Mean: " << result.output1 << "\nMedian: " << result.output2 << "\nMode: " << result.output3 << std::endl;

    return 0;
}
09/09/2023, 12:09 pm - Supriya: # Read only region start

class Result(object):
    def __init__(self, arg1, arg2, arg3):
        self.output1 = arg1  # mean
        self.output2 = arg2  # median
        self.output3 = arg3  # mode

class UserMainCode(object):

    @classmethod
    def mmm(cls, input1, input2):
        # input1: int
        # input2: list[int]
        # Expected return type: Result

        # Calculate mean
        mean = sum(input2) / input1

        # Calculate median
        sorted_data = sorted(input2)
        if input1 % 2 == 0:
            median = (sorted_data[input1 // 2 - 1] + sorted_data[input1 // 2]) / 2.0
        else:
            median = sorted_data[input1 // 2]

        # Calculate mode
        frequency = {}
        for num in input2:
            frequency[num] = frequency.get(num, 0) + 1
        mode = max(frequency, key=frequency.get)

        return Result(mean, median, mode)

# Read only region end

# Example
input1 = 5
input2 = [1, 2, 3, 3, 4]
result = UserMainCode.mmm(input1, input2)
print(result.output1, result.output2, result.output3)  # Output: 2.6 3 3
09/09/2023, 12:37 pm - Supriya: class UserMainCode(object):
    
    @classmethod
    def minimumCost(cls, input1, input2):
        min_cost = [0] * input1
        min_cost[0] = 0  # starting at city 1
        
        for i in range(1, input1):
            if i >= 3:
                min_cost[i] = min(min_cost[i-1] + abs(input2[i] - input2[i-1]),
                                  min_cost[i-3] + abs(input2[i] - input2[i-3]))
            else:
                min_cost[i] = min_cost[i-1] + abs(input2[i] - input2[i-1])

        return min_cost[input1 - 1]
09/09/2023, 12:41 pm - Nimisiiyaaaa: <Media omitted>
09/09/2023, 12:51 pm - Nimisiiyaaaa: Package algo;
import java.util.*;

public class MeanMedianMode 
{
    // Function for calculating mean
    public static double findMean(int n , int a[])
    {
        int sum = 0;
        for (int i = 0; i < n; i++)

        sum += a[i];

    return (double)sum / (double)n;
}

public static double findMedian(int n, int a[])
{
    // First we sort the array
    Arrays.sort(a);

    // check for even case
    if (n % 2 != 0)
        return (double)a[n / 2];

    return (double)(a[(n - 1) / 2] + a[n / 2]) / 2.0;
}

public static int findMode(int n, int a[] ) {
    int maxValue=0, maxCount=0;

    for (int i = 0; i < a.length; ++i) {
        int count = 0;
        for (int j = 0; j < a.length; ++j) {
            if (a[j] == a[i]) ++count;
        }
        if (count >  maxCount) {
            maxCount = count;
            maxValue = a[i];
        }
    }

   return maxValue;
 }

// Driver code
public static void main(String args[])
{
    int a[] = { 41, 18467, 6334, 26500, 19169 };
    int n = a.length;

    System.out.println("Mean = " + String.format("%.6f", findMean(n, a)));
    System.out.println("Median = " + String.format("%.6f", findMedian(n, a)) );
    System.out.println("Mode = " + findMode(n, a));
}
}
Edit: Can there be any scenario of bimodal, trimodal array like {1,1,2,2} and {1,1,2,2,3,3} where mode can be {1,2} or {1,2,3} . I am asking this since return type will be int[] in this case, but in question it was specifically mentioned that return type must be int.

javaalgorithm
Sha
09/09/2023, 12:52 pm - Supriya: public class UserMainCode {

    public static class Result {
        public final double output1;
        public final double output2;
        public final int output3;

        public Result(double out1, double out2, int out3) {
            this.output1 = out1;
            this.output2 = out2;
            this.output3 = out3;
        }
    }

    public Result mmm(int input1, int[] input2) {
        // Calculate Mean
        double sum = 0;
        for (int i : input2) {
            sum += i;
        }
        double mean = sum / input1;

        // Calculate Median
        Arrays.sort(input2);
        double median;
        if (input1 % 2 == 0) {
            median = (input2[input1/2 - 1] + input2[input1/2]) / 2.0;
        } else {
            median = input2[input1/2];
        }

        // Calculate Mode
        Map<Integer, Integer> freqMap = new HashMap<>();
        for (int i : input2) {
            freqMap.put(i, freqMap.getOrDefault(i, 0) + 1);
        }

        int mode = Collections.max(freqMap.entrySet(), Map.Entry.comparingByValue()).getKey();

        return new Result(mean, median, mode);
    }

    public static void main(String[] args) {
        UserMainCode obj = new UserMainCode();
        Result result1 = obj.mmm(3, new int[]{1, 2, 3});
        System.out.println(result1.output1 + ", " + result1.output2 + ", " + result1.output3);

        Result result2 = obj.mmm(5, new int[]{41, 18467, 6334, 26500, 19169});
        System.out.println(result2.output1 + ", " + result2.output2 + ", " + result2.output3);
    }
}
09/09/2023, 12:54 pm - Nimisiiyaaaa: #include <bits/stdc++.h> 
using namespace std;

//finding mean of the ungrouped data in array
float mean(float arr[], int n){
    float sum = 0;

    for(int i = 0;i < n; i++)
        sum += arr[i];
    
    return sum/n;
}

//finding median of the ungrouped data in the array
float median(float arr[], int n){

    //sort the array
    sort(arr, arr + n);

    if(n % 2 == 0)
        return (arr[n/2 - 1] + arr[n/2])/2;

    return arr[n/2];
}

//finding mode of ungrouped data
float mode( float arr[], int n){

    // Sort the array 
    sort(arr, arr + n); 
  
    //finding max frequency  
    int max_count = 1, res = arr[0], count = 1; 

    for (int i = 1; i < n; i++) { 
        if (arr[i] == arr[i - 1]) 
            count++; 
        else { 
            if (count > max_count) { 
                max_count = count; 
                res = arr[i - 1]; 
            } 
            count = 1; 
        } 
    } 
  
    // when the last element is most frequent 
    if (count > max_count) 
    { 
        max_count = count; 
        res = arr[n - 1]; 
    } 
    
    return res;
}

int main(){
    int n;
    float arr[50];

    cout<<"Enter the size of array: ";
    cin>>n;

    //input in the array
    cout<<"Enter the elements of array: ";
    for(int i = 0; i < n; i++)
        cin>>arr[i];

    //print mean, median and mode of ungrouped data in array
    cout<<"\nMean = "<<mean(arr, n);
    cout<<"\nMedian = "<<median(arr, n);
    cout<<"\nMode = "<<mode(arr, n);
    
    return 0;
}
12/09/2023, 3:46 pm - You changed the group name from "C" to "Kem chho maza ma 😭🫂"
12/09/2023, 4:07 pm - Supriya: <Media omitted>
12/09/2023, 4:10 pm - Supriya: nested list weight sum
12/09/2023, 4:10 pm - Supriya: <Media omitted>
12/09/2023, 4:10 pm - Supriya: <Media omitted>
12/09/2023, 4:12 pm - Supriya: <Media omitted>
12/09/2023, 4:18 pm - Supriya: <Media omitted>
12/09/2023, 4:20 pm - Supriya: ALL O'one DATA STRUCTURES
12/09/2023, 4:20 pm - Supriya: class AllOne {
public:
    unordered_map<string , int>mp;
    set<pair<int,string>>s;
    AllOne() {
        mp.clear();
        s.clear();
    }
    
    void inc(string key) {
        if(mp[key]==0)
        {
            mp[key]++ ;
            s.insert({mp[key],key});
        }
        
        else
        {
            s.erase(s.find({mp[key],key}));
            mp[key]++;
            s.insert({mp[key],key});
        }
    }
    
    void dec(string key) {
        
        if(mp[key]==1)
        {
            mp.erase(key);
        	s.erase(s.find({1,key}));
        }
        else
        {
        	s.erase(s.find({mp[key],key}));
            mp[key]--;
        	s.insert({mp[key],key});
		}
    }
    
    string getMinKey() {
       return s.size()>0?(pair<int,string>(*(s.begin())).second):"";
    }
    string getMaxKey() {
        return s.size()>0?(pair<int,string>(*(s.rbegin())).second):"";
    }
};
12/09/2023, 7:00 pm - Supriya: <Media omitted>
12/09/2023, 7:07 pm - Nimisiiyaaaa: <Media omitted>
12/09/2023, 7:20 pm - Supriya: Given an array of numbers, find the index of the smallest array element (the pivon, for which the sums of all elements to the left and to the right are equal. The array may not be reordered.

The fincts

The funct

ALL

15

16 17

Example arr-(1,2346)

int balance

18

19

int lef

int rig

20 21

the sum of the first three elements, 1+2+3+6. The value of the last element is 6.

• Using zero based indexing arrt31-4 is the pivot between the two subarrays.

The index of the pivot is 3

22 23

for (in

(

24

25

Function Description

Complete the function balancedSum in the editor below.

}

26

27

for (

28

29

balancedSum has the following parameter(s):

int arr[n]: an array of integers

Returns:

int: an integer representing the index of the pivot

30

31

32

Constraints

33

34

3sns105

35

• 1s arrij s 210, where O≤i≤n

36

• It is guaranteed that a solution always exists.
12/09/2023, 7:23 pm - Supriya: #include <bits/stdc++.h>
using namespace std;
 
int sum(int a[], int start, int end)
{
    int result = 0;
 
    for (int i = start; i < end; i++) {
        result += a[i];
    }
 
    return result;
}
 
int equilibriumPoint(int A[], int n)
{
    int index = n / 2;
    int left_sum = sum(A, 0, index);
    int right_sum = sum(A, index + 1, n);
 
    if (left_sum == right_sum) {
        return A[index];
    }
 
    else if (left_sum > right_sum) {
        while (index >= 0) {
            left_sum -= A[index - 1];
            right_sum += A[index];
            index -= 1;
 
            if (right_sum > left_sum)
                return -1;
            else if (left_sum == right_sum)
                return A[index];
        }
    }
 
    else if (right_sum > left_sum) {
        while (index <= n - 1) {
            left_sum += A[index];
            right_sum -= A[index + 1];
            index += 1;
            if (left_sum > right_sum)
                return -1;
            else if (left_sum == right_sum)
                return A[index];
        }
    }
    return -1;
}
12/09/2023, 7:33 pm - Supriya: <Media omitted>
12/09/2023, 7:33 pm - Supriya: <Media omitted>
12/09/2023, 7:37 pm - Nimisiiyaaaa: class AuthenticationManager {
public:
    unordered_map<string, int>mp;
    int time= 0;
    AuthenticationManager(int timeToLive) {
        time= timeToLive;
    }
    
    void generate(string tokenId, int currentTime) {
        mp[tokenId]= currentTime + time;// This will give you our expiry time at which we will be logged out from the site.
    }
    
    void renew(string tokenId, int currentTime) {
        auto it= mp.find(tokenId); //check if the token is available or not, if it's not available return.
        if(it==mp.end())
        return;
        else{
        if(mp[tokenId]>currentTime) // if the token is available and it's expiry time is greater than current time renew and update the expiry time
        {
            mp[tokenId]= currentTime + time;  // update the expiry time by adding the current time with timeToLive value i.e 5 here.
        }
        }
    }
    
    int countUnexpiredTokens(int currentTime) {
        int total=0;
        for(auto x:mp) // iterate through every token and check if any token has it's expiry time greater than currentTime, if yes do total= total+1, it is simply calculating the remaining time here.
        {
            // cout<<x.second<<" ";
            if(x.second>currentTime)
            total++;
        }
        return total;
    }
};

/**
 * Your AuthenticationManager object will be instantiated and called as such:
 * AuthenticationManager* obj = new AuthenticationManager(timeToLive);
 * obj->generate(tokenId,currentTime);
 * obj->renew(tokenId,currentTime);
 * int param_3 = obj->countUnexpiredTokens(currentTime);
 */
13/09/2023, 12:27 am - Nimisiiyaaaa: [6:25 pm, 09/11/2022] Aashish Kushwaha: Equation di 3 aur phir pucha agr m ye zero krdu to solution aega
[6:25 pm, 09/11/2022] Aashish Kushwaha: Aur agr aega to kyu aega
[6:25 pm, 09/11/2022] Aashish Kushwaha: Programming terms m btao kya glich aega...
[6:25 pm, 09/11/2022] Aashish Kushwaha: Gauss Jordan last loop batao
[6:25 pm, 09/11/2022] Aashish Kushwaha: Non linear method ke naam
[6:25 pm, 09/11/2022] Aashish Kushwaha: Backward substitution ka code
[6:25 pm, 09/11/2022] Aashish Kushwaha: Newton raphson formula
13/09/2023, 12:27 am - Nimisiiyaaaa: ye question the inki equation banegi
13/09/2023, 12:27 am - Nimisiiyaaaa: phir ek kisi method se solve krna h
13/09/2023, 12:27 am - Nimisiiyaaaa: agr answer sahi hua tho vho allow kr dega
13/09/2023, 12:27 am - Nimisiiyaaaa: phir code krna h
13/09/2023, 12:27 am - Nimisiiyaaaa: ye rahe tere code
13/09/2023, 12:27 am - Nimisiiyaaaa: The percent return rate of a growth fund, income fund, and money market is 10%, 7%, and 5% respectively. Suppose you have 3200 to invest and you want to put twice as much in the growth fund as in the money market to maximize your return.

How should you invest to get a return of 250 dollars in 1 year?
13/09/2023, 12:27 am - Nimisiiyaaaa: ek question ye bhi tha
13/09/2023, 12:27 am - Nimisiiyaaaa: mid term ka h ye
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:27 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 12:28 am - Nimisiiyaaaa: <Media omitted>
13/09/2023, 6:53 pm - Supriya: <Media omitted>
16/09/2023, 11:12 am - Supriya: Challenge 1 description

Task 1

Task 2

A patient needs rehabilitation within the next N days (numbered from 0 to N-1). The rehabilitation consists of X sessions. For every rehabilitation session, other than the last one, the next session is exactly Y days later.

You are given an array A of N integers listing the costs of the individual rehabilitation sessions on the N days: that is rehabilitation on the K-th day costs A[K].

Write a function:

int solution(vector<int> &A, int x, int Y);

that, given the array A and the two integers X and Y, returns the minimum cost of rehabilitation.

It is guaranteed that it is always possible to complete all X rehabilitation sessions.

Examples:

1. Given A=[4,2,3,7,X=2 and Y=2, your function should return 7, which is the sum of the costs on days 0 and 2 (7=4+3).

2. Given A [10,3,4,71, X=2 and Y=3, your function should return 17 since

rehabilitation is possible only on days 0 and 3 (17=10+7).

3. Given A-[4,2,5,4,3,5,1,4,2, 71, X-3 and Y=2, your function should return 6, which is the sum of the costs on days 4, 6 and 8 (6=3+1+2).

Write an efficient algorithm for the following assumptions:

Nand X are integers within the range [2.200,000);

each element of array A is an integer within the range [1..1,000); Vis an intoner within the rannal1 100 000)
16/09/2023, 11:14 am - Supriya: •Y is an integer within the range [1..199,999];

Nis higher than (X-1)*Y.
16/09/2023, 11:16 am - Supriya: Challenge 2 description

You are given an undirected graph consisting of N vertices, numbered from 0 to N-1, connected with Medges. The graph is described by two arrays, A and B, both of length M. A pair (AIKI, BIK), for K from 0 to M-1, describes an edge between vertex A[K] and vertex BIK).

Each second, every vertex with at most one edge connected to it disappears. Every edge which is connected to one of the disappearing vertices also disappears.

After how many seconds will the vertices stop disappearing?

Consider a graph with N=7 vertices and following 6 edges: (0, 1), (1,2), (2, 0), (1, 4), (4, 5) and (4,6).

After the first second, vertices 3, 5, and 6 (marked red in the picture above) will
16/09/2023, 11:16 am - Supriya: After the first second, vertices 3, 5, and 6 (marked red in the picture above) will

disappear:

After the next second vertex 4 will disappear and only vertices 0,1 and 2 will be left:

All three remaining vertices are connected to two edges, so none of will ever disappear

and the answer is 2.

Write a function:

int solution(int N, int A[], int B[], int M);

that, given an integer N and two arrays A and B of M integers each, returns the number of seconds after which the vertices will stop disappearing, or 0 if no vertices will ever disappear.

Examples:

Q Search
16/09/2023, 11:17 am - Supriya: 1. Given N-7,A=[0,1,2,1,4,4) and B-[1,2,0,4,5,6), the function should return 2, as

explained above.

2. Given N=7,A=(0,1,2,4, 5] and B = [1, 2, 3, 5, 6], the function should return 2. The

graph from this example is shown below:

Task 1

Task 2

After the first second, vertices 0, 2, 4, and 6 (marked red in the picture above) will disappear.

During the next second, all of the remaining vertices disappear, so the answer is 2. 3. Given N-4,A-10,1,2,3) and B-11,2,3, 0), the function should return 0. Each vertex

is connected with two edges, so none of them will disappear.
16/09/2023, 11:41 am - Supriya: #include <vector>
#include <unordered_set>

int solution(int N, int A[], int B[], int M) {
    // Adjacency list representation
    std::vector<std::unordered_set<int>> graph(N);
    
    for(int i = 0; i < M; i++) {
        graph[A[i]].insert(B[i]);
        graph[B[i]].insert(A[i]);
    }

    int seconds = 0;
    bool deleted = true;  // To keep track if we deleted a node in the current iteration

    while(deleted) {
        deleted = false;
        std::unordered_set<int> to_delete;

        // Find vertices to delete
        for(int i = 0; i < N; i++) {
            if(graph[i].size() <= 1 && !to_delete.count(i)) {
                to_delete.insert(i);
                deleted = true;
            }
        }

        // Delete vertices
        for(int vertex: to_delete) {
            for(int neighbor: graph[vertex]) {
                graph[neighbor].erase(vertex);
            }
            graph[vertex].clear();
        }

        if(deleted)
            seconds++;
    }

    return seconds;
}
16/09/2023, 11:47 am - Supriya: <Media omitted>
16/09/2023, 11:54 am - Supriya: int solution(int W_{1} vector<int> &A, vector<int> &B);
16/09/2023, 12:01 pm - Supriya: public static int Solution(int[] arr, int x, int y)
{
    var totalMinCost = int.MaxValue;

    for (var i = 0; i < arr.Length; i++) 
    {
        if (x == 3)
        {
            // Calculate the indices for three rehabilitation sessions
            var first = i;
            var second = i + y;
            var third = second + y;
            
            // Check if all sessions are within the array bounds
            if (third < arr.Length) 
            {
                // Calculate the total cost for the three sessions
                var currCost = arr[first] + arr[second] + arr[third];
                
                // Update the minimum total cost if the current cost is smaller
                totalMinCost = Math.Min(currCost, totalMinCost);
            }
        }
        else if(x == 2)
        {
            // Calculate the indices for two rehabilitation sessions
            var first = i;
            var second = i + y;
            
            // Check if both sessions are within the array bounds
            if (second < arr.Length) 
            {
                // Calculate the total cost for the two sessions
                var currCost = arr[first] + arr[second];
                
                // Update the minimum total cost if the current cost is smaller
                totalMinCost = Math.Min(currCost, totalMinCost);
            }
        }
    }

    // Return the overall minimum total cost
    return totalMinCost;
}
16/09/2023, 12:03 pm - Supriya: <Media omitted>
16/09/2023, 12:03 pm - Supriya: <Media omitted>
16/09/2023, 12:03 pm - Supriya: <Media omitted>
16/09/2023, 12:12 pm - Nimisiiyaaaa: Test output

Output (stderr):

Traceback (most recent call last): "exec.py", line 123, in <module>

File main()

File "exec.py", line 78, in main solimport('solution')

File "/tmp/exec_user_cv_r6ru7/solution.py",

line

19

if not visited[neighbour] and
16/09/2023, 12:20 pm - Supriya: #include <vector>
#include <unordered_set>
#include <queue>

int solution(int N, std::vector<int> &A, std::vector<int> &B) {
    // Adjacency list representation
    std::vector<std::unordered_set<int>> graph(N);
    std::vector<int> degree(N, 0);  // to keep track of the degree of each vertex
    
    int M = A.size();  // since A and B are of the same length
    
    for(int i = 0; i < M; i++) {
        graph[A[i]].insert(B[i]);
        graph[B[i]].insert(A[i]);
        degree[A[i]]++;
        degree[B[i]]++;
    }

    std::queue<int> q;
    for(int i = 0; i < N; i++) {
        if(degree[i] == 1) {
            q.push(i);
        }
    }

    int seconds = 0;
    while(!q.empty()) {
        int size = q.size();
        for(int i = 0; i < size; i++) {
            int vertex = q.front();
            q.pop();
            
            for(int neighbor : graph[vertex]) {
                degree[neighbor]--;
                if(degree[neighbor] == 1) {
                    q.push(neighbor);
                }
            }
            graph[vertex].clear();  // or set degree[vertex] to 0, either works
        }
        seconds++;
    }

    return seconds;
}
16/09/2023, 12:21 pm - Nimisiiyaaaa: <Media omitted>
16/09/2023, 3:07 pm - Supriya: Write your email hera
16/09/2023, 3:07 pm - Nimisiiyaaaa: mishaverma433@gmail.com
16/09/2023, 3:08 pm - Supriya: <Media omitted>
16/09/2023, 3:08 pm - Supriya: <Media omitted>
16/09/2023, 3:08 pm - Supriya: Dob
16/09/2023, 3:08 pm - Nimisiiyaaaa: 04-03-2003
16/09/2023, 3:11 pm - Nimisiiyaaaa: Started?
16/09/2023, 3:11 pm - Supriya: One day, Fred and his N friends were playing a card game in which each player throws a card with a number written on it. The cards are such that a number X is written on front of the card, and the negative of that number is written on the back side of the card. This game has the following rules: -

Each of the N players is asked to throw a card. After all the N cards are thrown, Fred has to flip one or more cards in consecutive order, only once. Your task is to help Fred flip the cards in such a way that the sum of the numbers, on front face of the cards, is the maximum.

Input Specification:

input1: An integer N denoting the number of cards (1 <= N <= 500) input2: An integer array containing N integers, where the ith integer denotes the value on the front of the card (-1000 <= input2[i] <= 1000)
16/09/2023, 3:12 pm - Supriya: Output Specification:

Return the maximum sum of the numbers, on the front of the cards

Example 1:

input1:5 input2: 1-23-1-4,-2)

Output: 8

Explanation:

Since Fred can flip consecutive cards only once, he chooses to flip the last three cards, which results in the maximum sum (+2+3+1+4+2), i.e. 8. Therefore, 8 is returned as the output.

Example 2:

input1:5

input2: (-1,2,3,4,-5)

Output: 13

Explanation: Since Fred can flip consecutive cards only once, he chooses to flip the last card, which results in the maximum sum (-1+2+3+4+5), Le.. 13. Therefore, 13 is returned as the output
16/09/2023, 3:13 pm - Nimisiiyaaaa: <Media omitted>
16/09/2023, 3:13 pm - Nimisiiyaaaa: <Media omitted>
16/09/2023, 3:14 pm - Nimisiiyaaaa: Nnnn
16/09/2023, 3:19 pm - Nimisiiyaaaa: Chegg pe hai.
16/09/2023, 3:20 pm - Supriya: Output different hai iska
16/09/2023, 3:21 pm - Nimisiiyaaaa: Ok
16/09/2023, 3:24 pm - Nimisiiyaaaa: https://codewindow.in/nagarro-question-solved-the-card-game-codewindow-in/
16/09/2023, 3:26 pm - Nimisiiyaaaa: Ye nahi chala?
16/09/2023, 3:26 pm - Nimisiiyaaaa: Ques same hai
16/09/2023, 3:27 pm - Supriya: Nahi
16/09/2023, 3:27 pm - Nimisiiyaaaa: Doosra ques karlo
16/09/2023, 3:28 pm - Supriya: Find out the longest common subsequence Z of the following two given strings.

X = {A,A,A,C,B,B,C,D)

Y = (A,B,C,D,A,B}
16/09/2023, 3:30 pm - Supriya: There are 9 jobs to run on a machine, they are- (p1, p2, p3, p4, p5, p6, p7, p8, p9) = (85, 15, 90, 45, 65, 25, 15, 75, 35) and deadline (d1, d2, d3, d4, d5, d6, d7, d8, d9) = (2, 1, 7, 5, 3, 1, 2, 4, 5). Find out the maximum profit if they are scheduled on machine for unit time.
16/09/2023, 3:32 pm - Nimisiiyaaaa: <Media omitted>
16/09/2023, 3:33 pm - Supriya: If A[x][y] is a 2-D array, B is base address and k is size of 1 block, then what is the address of element at A[i][j] if elements are arranged as row wise?
16/09/2023, 3:34 pm - Nimisiiyaaaa: https://www.ques10.com/p/13217/solve-the-following-job-sequencing-with-deadline-1/
16/09/2023, 3:34 pm - Nimisiiyaaaa: .
16/09/2023, 3:34 pm - Nimisiiyaaaa: Iska
16/09/2023, 3:35 pm - Supriya: Select an option

B +(j^ * k)+(i^ * y^ * k)

B +(i^ * k)+(j^ * y^ * k)

B +(j^ * k^ * x)+(i^ * y^ * k)

B +(j^ * x^ * k)+(i^ * k)
16/09/2023, 3:36 pm - Supriya: class Node{ 2 int key;

Node left = null, right = null;

5 6

Node(int key) { this.key = key;

}

4

7 8)

19

10 class Main {

11

public static int height (Node root) { if (root == null) {

12 13

14

return 0;

} return 1 Math.max(height (root.left), height(root.right));

15 16 }

public static void main(String[] args) {

17

Node root = null; root = new Node(15);

root.left = new Node(10);

18 19

20

21

root.right = new Node(20); root.left.left = new Node(8);

22

23

24

root.left.right = new Node(12); root.right.left = new Node(16);

root.right.right = new Node(25);

25

26

27

System.out.print(height (root));

28 }

29 }
16/09/2023, 3:39 pm - Supriya: Gen alongside is the Ccode snippet implementing the deque operation in the queue data structure:

1 int desqueue() (

if (isEmpty()) {

printf("Queue is empty");

return -1;

int element queue[front];

front (front+ 1) = MAX_SIZE; return element;

Which statement is comect about this code? Select the correct answer from the given choices.

2

3

5

Attempted: 5/5

Select an option

It does not handle the case when the queue is full

It returns the front element of the queue without removing it

It correctly implements the dequeue operation in a circular queue

It causes a buffer overflow when the front index exceeds MAX SIZE
16/09/2023, 3:40 pm - Supriya: In reference to Linux, in pam_deny which of the following will be returned by the session service?
16/09/2023, 3:40 pm - Supriya: Select an option

em?

Ops

Opstree

Ofree

iostat
16/09/2023, 3:40 pm - Supriya: Which of the following commands in Linux is used to find the idle memory in the system?
16/09/2023, 3:42 pm - Supriya: Which of the following commands you would use to search for a file in a Database in Linux?

locate

slocate

vdir

whatis
16/09/2023, 3:49 pm - Supriya: A routing algorithm is implemented in a network such that whenever a router boots on the network, a pre- defined routing table is loaded in it which would be used by the router for subsequent data transfer. The data packet is forwarded by the router by randomly selecting any of the neighbours that it can identify from the routing table provided. What kind of routing is this?
16/09/2023, 3:50 pm - Supriya: Random walks which is a non-adaptive routing algorithm

Link state routing which is an adaptive routing algorithm

C

Flooding which is a non-adaptive routing algorithm

Random flooding which is an adaptive routing algorithm
16/09/2023, 3:51 pm - Supriya: A developer is creating an application that will send e-mails drafted by the user to other users in the network and will also retrieve e-mails that have been addressed to the user by other users on the network. Another requirement during e-mail retrieval is to delete the e-mail on the server once the user has successfully downloaded the e-mail to his/her local computer. Which application layer protocol should the developer use in these scenarios?

<

2

3

1

4

5

<

Attempted: 3/5

Select an op

Simple

keep r

Simple
16/09/2023, 3:54 pm - Nimisiiyaaaa: Tukke mat marna
16/09/2023, 3:54 pm - Nimisiiyaaaa: Supriya tu search kar
16/09/2023, 3:55 pm - Nimisiiyaaaa: Pad kyun rahi hai
16/09/2023, 3:56 pm - Supriya: Tukka nhi mar rhe
16/09/2023, 3:57 pm - Supriya: Model based testing (MBT) is integrated into the test process with different input and output artifacts according to the information and abstraction level. What are the output artifacts involved?
16/09/2023, 3:57 pm - Supriya: Your application consists of three modules. You have developed one of the modules and want to test it. However, few of its functionalties are dependent on the other modules which have not been developed yet. In this case, the other modules can be replaced by stubs and drivers as required. Identify the kind of testing used in this scenario.

Unit Testing

System Testing

O Integration Testing

Component Testing
16/09/2023, 3:58 pm - Supriya: 1. Test planning and control.

2. Test analysis and design.

3. Test implementation and execution.

Later

4. Evaluation of exit criteria and reporting. 5. Test closure activities.

1. Test strategy.

2. The test basis including requirements and other test targets, test conditions

existing design or models. 3. Incident and defect reports, test logs and test execution logs from previous

execution activities.

4. Method and process guidelines, tool documents.

1. MBT models.

2. Parts of the test plan, test schedule and test metrics. 3. Test scenarios, test suites, test execution schedules and test design specificat

4. Test cases, test procedure specifications, test data, test scripts and test adapt

layer.

5. Bidirectional traceability report between generated tests and the test basis.

1. Determine if test environment needs archiving in order to take back-ups.

2. Verify the network configuration.

3. Identify the required server operating system, databases and other compone

4. Identify the number of license required by the test team.
16/09/2023, 4:00 pm - Supriya: Which of the following options explains component integration testing and system integration testing correctly?

System integration test integrated systems. Component integratio systems, packages, mi (e.g., web services).

Component integrati integrated compone System integration t systems, packages, (e.g., web services).

Component integr

ongoing system te

System integration
16/09/2023, 4:00 pm - Supriya: System integration testing focuses on the interactions and interfaces between

integrated systems. Component integration testing focuses on the interactions and interfaces between systems, packages, microservices and interfaces provided by external organizations

(eg. web services).

Component integration testing focuses on the interactions and interfaces between integrated components. System integration testing focuses on the interactions and interfaces between

systems, packages, microservices and interfaces provided by external organizations

(eg, web services).

Component integration testing may be done after system testing or in parallel with ongoing system test activities. System integration testing is performed after system testing and is generally automated.

There is no concept called as component and system testing in integration. Component and system testing are part of the system.
16/09/2023, 4:02 pm - Supriya: What are the benefits of using a test automation tool?
16/09/2023, 4:02 pm - Supriya: 1) Quality

2) Stability

3) Performance

4) Security and reliability are some of the benefits of test automation tool.

1) Less expensive in the short-term.

2) Low accuracy result.

3) Less reliable.

4) Programmingly not required

1. Data quality assessment 2. Data conversion and migration

3. Usability testing

5. Accessibility testing

6. Localization testing 6. Security testing

7. Portability testing

1. Reduction in repetitive manual work. 2. Greater consistency and repeatability.

3. More objective assessment.

4. Easier access to information about testing.
16/09/2023, 4:07 pm - Nimisiiyaaaa: Gpt pe search kar
16/09/2023, 4:07 pm - Supriya: Brainl ans hai
16/09/2023, 4:07 pm - Supriya: Brainly
16/09/2023, 4:07 pm - Supriya: There are 58 interfaces and in that 14 are not ready for integration test which is simulated using stubs. How many integration flows are there?
16/09/2023, 4:08 pm - Supriya: What will be the output of the given code snippet?

n occured 2 times I occured 2 times y occured 2 times

n occured 2 times

i occured 2 times

1 from collections import Counter

2

3 my string "India_is_my_country"

4 counts Counter (my_string)

5 try:

for key,val in counts.items(): if val> 2: 7

print("(key) occured (val) times", format (key-key, val-str(val)))

9 except ValueError:

10 print("Not enough values to unpack")

occured 3 times

y occured 2 times

n occured 2 times I occured 2 times

Not enough values to unpack
16/09/2023, 4:09 pm - Supriya: 1 x1 = set(("1", "2", "3", 1, 2, 3, '1', '2', '3')) 2 x2 = {'1', '2', '3'}

3 x1.union(x2) 4 print(x1)

5 x1.update(x2)

6 print(x1)
16/09/2023, 4:11 pm - Nimisiiyaaaa: Kitna time?
16/09/2023, 4:11 pm - Nimisiiyaaaa: Bacha h
16/09/2023, 4:11 pm - Supriya: 1 hour
16/09/2023, 4:12 pm - Supriya: You build a dataset Cars and stored it in dbms. Now, you want to print the data rows in python command line console. Which code will you execute?

Revisit Later

Attempted: 3/5

Select an option

1 impo

2 impo

3 my cur

pass

4
16/09/2023, 4:13 pm - Supriya: Import pymysql

import mysql.connector mydb-sysql.connector.connect(host"localhost", user="root

passed "root" database="sb").

mycursor mydb.cursor (buffered-True) print("rows are")

print(sycursor.execute("select * from cars"), "\n")

",

import pymysql import mysql.connector

wydb-mysql.connector.connect(host="localhost", user="root", passwd "root databasesb") Amycursor mydb.cursor(buffered True)

6 print("rows are")

7 mycursor.execute("select from cars") for d in mycursor:

9print(d)

our screen

Stop sharing

+91 00471-89100.
16/09/2023, 4:14 pm - Supriya: Consider that you want to write a query in which there are two requirements: 1. Fetch the assignment-wise count using a clause

2. Sort the result by that assignment's count in descending order Which of the SQL queries is correctly related to the given case?
16/09/2023, 4:16 pm - Supriya: Which of the following queries will display employee ID, manager ID and employee last name for all employees who are two levels below the employee X (e_ID=102)?

EMPLOYEES

Null?

NOT NULL

Name

JOBS

Name

Null?

JOB ID

NOT NULL

JOB TITLE

NOT NULL

MIN SALARY

MAX SALARY

Type

VARCHAR2(10)

VARCHAR2(10) NUMBER(6)

NUMBER(6)

DEPARTMENT

Null?

Type

NOT NULL

NUMBER(4)

NOT NULL VARCHAR2(3)

NUMBER

NUMBER

Name

DEPT ID

DEPT NAME

MGR ID

LOC ID

EID F NAME

NOT NULL

NOT NULL

L NAME

EMAIL

PH NO

HIRE DT

JOB ID

Type

NUMBER(6) VARCHAR2(20)

VARCHAR2(20)

VARCHAR2(20)

VARCHAR2(20)

DATE

VARCHAR2(20)

NUMBER 8.2)

NUMBER(22)

NUMBERG

NUMBER(4)

NOT NULL

NOT NULL

SALARY

COMMISSION PCT

MGR ID

DEPT ID

Name

EID

START DT END DT

JOB ID

DEPT ID

JOB HISTORY

Null?

Type

NOT NULL

NUMBER(6)

NOT NULL DATE

NOT NULL

DATE

NOT NULL VARCHAR2(10) NUMBER(6)

LOCATIONS

Name

Null?

Type

LOC ID

NOT NULL

NUMBER(4)

STREET ADDRESS

VARCHAR2(25)

POSTAL CODE

VARCHAR2(25)

CITY

NOT NULL VARCHAR2(25)

STATE

VARCHAR2(25)

COUNTRY ID

CHAR2
16/09/2023, 4:17 pm - Supriya: Question 5

Given is the structure of the EMP DEPT VU view.

Column Name: EMPLOYEE_ID

EMP_NAME

JOB ID

SALARY

DEPARTMENT ID DEPT NAME

From the EMPLOYEES table:

1 EMPLOYEE_ID NUMBER

2 EMP_NAME

VARCHAR2 (30)

3 JOB ID

VARCHAR2 (20)

4 SALARY NUMBER 5 DEPARTMENT ID NUMBER

From the DEPARTMENTS table: 1 DEPARTMENT ID NUMBER

2 DEPT NAME VARCHAR2 (30)

Which of the following SQL statements contain an error?
16/09/2023, 4:18 pm - Supriya: Assume that you are working on the Power BI Desktop tool for enhancing the data visualization part of your application and are using the Report themes feature for vanous reports generated in this tool. Which option is appropriate for the given questions?

1 Which file format should be used if you want to create a new report theme manually?

2 You have created a report theme but while importing it, you get on error. So you want to remove this theme

from that report. Which process can be used in this case?

Analyze the given choices and select the option with the correct set of answers.

Remove Theme"

1 The theme file should be in XML format

2. Go to "Options" Choose Themes > Click on the "Switch Theme" option Select

1 The theme file should be in JSON format

"Remove Theme

2. Go to "Options" Choose "Themes Click on the "Switch Theme" option > Select

1. The theme file should be in ISON format

2 Go to "Home"> Choose Themes Click on the "Switch Theme option Select

"Default Theme

1. The theme file should be in XML format

2. Go to "Home"> Choose Themes"> Click on the "Switch Theme" option > Select

"Default Theme"
16/09/2023, 4:19 pm - Supriya: Assume that you are working on data visualization techniques available in Python technology. You need to build a model out of a dataset and deploy it in the cloud. You need to create your own dataset with random numbers. So, your task is to generate this dataset first with random float integer values. This dataset should have 6 different columns; Col1, Col2, Col3, Col4, Col5, and Col6 respectively, and should have around 30 rows. Based on this dataset, you need to apply a Scatter plot for Col1 and Col2 columns. This plot should be titled "My Scatter Plot" and on the x-axis and y-axis sides, Col1 and Col2 have to be used respectively. Which is the appropriate code snippet that you can use to complete this task? Analyze the given choices and select the correct option.
16/09/2023, 4:20 pm - Supriya: import pandas as pd

import numpy as n mydf = pd.DataFrame(n.random.rand(30,6), columns= [Col1', 'Col2', 'Col3','Col4', 'Col5', 'Col6']) df.plot.scatter(x='Col2', y='Col1', title= 'My Scatter Plot')

import pandas as pd import numpy as n

mydf = pd.DataFrame(n.random.randFloat(30,6),cols=

[Colt','Col2', 'Col3, Col4". Col5, Col6']) df.scatterplot(x='Col2', y='Col1', title='My Scatter Plot')

import pandas as pd import numpy as n mydf = pd.DataFrame(n.random.rand(30,6).cols= ['Col1','Col2', 'Col3','Col4','Col5', 'Col6']) df.scatterplot(x-axis='Col2', y-axis='Col1', title="My Scatter Plot')

import pandas as pd

import numpy as n

mydf = pd.DataFrame(n.random.randFloat(30,6).columns= [Col1', 'Col2','Col3', 'Col4', 'Col5', 'Col6'])

df.plot.scatter(x-axis='Col2', y-axis='Col1', title='My Scatter Plot')
16/09/2023, 4:21 pm - Supriya: <Media omitted>
16/09/2023, 4:21 pm - Supriya: Solve this
16/09/2023, 4:21 pm - Supriya: An organization needs to store data with pointer less object. Which of the following database models supports the given requirement?

Column Oriented Database

Row Oriented Database

Relational Database

Document Store
16/09/2023, 4:23 pm - Supriya: What amongst the following will be collected as metadata for identifying the business processes of a dimensional model?

Owners

Data quality issues

Common terms used across business processes

Business requirements for the selected business

All of the given options
16/09/2023, 4:23 pm - Supriya: A health care provider wants to hide employee health details from bo/her employer. What level of data hiding will be ined here?

Conceptual

Logical

Physical

External
16/09/2023, 4:24 pm - Supriya: Which of the following modeling techniques is more appropriate for data warehouses?

Entity-relationship

Dimensional

Physical

None of the given options
16/09/2023, 4:24 pm - Supriya: Which of the following processes updates data in the data warehouse?

Loading

Transformation

Refreshing

Cleaning
16/09/2023, 4:25 pm - Supriya: You are developing a Python program that needs to perform time-consuming tasks concurrently to improve overall performance. To achieve this, you decide to use threads for parallel execution.

Which of the following code snippets demonstrates the correct creation and execution of a thread?
16/09/2023, 4:26 pm - Supriya: In a command interpreter of an operating system, Jane needs to create a symbolic link to a file located in a different directory. She wants to make a link named "mylink" in her current directory that points to a file named "targetfile" located in the directory "/path/to/files

O Ins/path/to/files/targetfile mylink

Which of the following commands and its specific option should Jane use to accomplish this?

cp-1/path/to/files/targetfile mylink

myt/path/to/files/targetfile mylink

rms/path/to/files/targetfile mylink
16/09/2023, 4:26 pm - Supriya: Question 3

A user has given with q vector which is sequence of 0's and 1's. The vector represents the information of disks whether they are free or not. By using the below vector, identify the correct answer from below Choices Vector: 011011000110101

7 blocks are free and 8 blocks are occupied

no blocks are occupied in the given vector

no blocks are free in the given vector
16/09/2023, 4:27 pm - Supriya: You need to share a single copy of a program with all your team-mates who are also connected at the same point of time at you to the same memory in which the copy of file resides How will you achieve this?

Fragmentation

Re-entrancy

Monolithic kernel

Timesharing OS
16/09/2023, 4:28 pm - Supriya: Many times users leave the system without logging out of open session. Doing so is a breach of security, and another user can not log in either. As per your experience, how can this situation be handled permanently?

We can not handle this situation

We need to log out manually

O It will automatically close after 10 s

We can use timeout varable in user profile
16/09/2023, 4:29 pm - Supriya: 1 public class calculator{

2 private int Addition(int value) {

return value+6;

15

3

6 class mobileCalculator extends calculator{

Error in code hence no output

34

7 private static int value;

8 public mobileCalculator ()(

value 25;

10

11

12

D

public static void main(String[] args)

Calculator temp new mobilecalculator(); Display (temp. Addition(9));

-

No output

14

16)

What is the output of the above code?
16/09/2023, 4:29 pm - Supriya: Assume that you are developing a software system for a car rental company. Which option best describes the use of abstraction in this scenario? Analyze the given choices and select the correct option

Abstraction is used to represent only the essential features of a car such as its make model and rental price while hiding unnecessary details such as its engine capacity and internal components.

Abstraction is used to represent all features of a car, including its make, model, rental price, engine capacity, and internal components.

Abstraction is used to hide all the features of a car, showing only essential details such as its color and rental availability.

Next

Abstraction is used to hide only essential features of a car, showing unnecessary details such as its maintenance history and previous drivers.
16/09/2023, 4:30 pm - Supriya: Following statements are true for which of the following alt is a special form of Association where it represents Has A relationship. B)It is a unidirectional association Le, a one way relationship d) In it both the entries can survive individually which means ending one entity will not effect the other entity

association

aggregation

composition

Specialization
16/09/2023, 4:30 pm - Supriya: interface ABC

2 (void myMethod(); void getInfo(); 3 Jabstract class abc implements xyz

4 (void getData(){System.out.println("Hello World");} 5)public class Test extends xyz 6 (public void myMethod(){

7 System.out.println("How are you");}

8 public void getInfo() 9 public static void main(String[] args)

10 {xyz obj new Test();obj.getInfo();}}

4

1 interface ABC

2 (void myMethod(); void getInfo();

3 Jabstract class abc implements xyz 4 (void getData()(System.out.println("Hello World");}

5)public class Test extends xyz 6 (public void myMethod(){

7. System.out.println("How are you");}

8 public void getInfo(){

9 System.out.println("xyz");}

10 public static void main(String[] args)

11 (xyz obj -new Test();obj.getInfo();}}
16/09/2023, 4:31 pm - Supriya: Consider that ABC is an interface that declares two methods, myMethodo and getinfo) xyz is an abstract class that implements the ABC interface and defines a method called getData0) Test is a concrete class that extends the xyz class and implements the myMethod and getinfo() methods. When the main method is executed a new Test object is created and assigned to a vanable of type xyz. The getinfo() method is then called on this object, which outputs the string "xyz to the console. The Test class also provides the implementation for the myMethodo and getinfo0 methods inherited from the ABC interface. The myMethod() method outputs the string "How are you to the console and the getinfo() method is implemented to output the string "sy to the console Overall this code demonstrates the use of inheritance and interfaces in Java to provide a common interface for related classes and objects, while allowing for flexibility in implementation details

Which is the best code to print "XYZ using polymorphism? Analyze the given choices and select the correct

option
16/09/2023, 4:34 pm - Supriya: Which of the following commands is/are used to set serves to transfer files to and from a remote host in

Linux?

A sz

B. rz

C. sx
16/09/2023, 4:35 pm - Supriya: 3

2

3

Attemptext. 4/5

Select an option

Previous

Next

& Clear Response

We have to audiout a web-based application for which you need to write selenium code to enter the user and pond on the login page of the application

1 public class PG2 (

2 public static void main(String[] args) {

idently the art code snippet for the same

System.setProperty("webdriver.gecko.driver","C:\\geckodriver.ex 27");

WebDriver driver = new FirefoxDriver(); string baseurl="http://www.facebook.com";

string tagame = "";

B driver.get(baseurl);

tagame-driver.findElement(By.id("email")).getTagiame();

10 System.out.println(tagame);

11

12

driver.close():

System.exit(0);

Met One Acument 2021-2031

Need Help? Contact

testumetti.com is sharing your screen

Stop sharing

1 driver.get("URL")

2 driver.find_element_by_id("ID").send_keys("username") 3 driver.find_element_by_id ("ID").send_keys("password") 4 driver.find_element_by_id("submit").click()

1 driver. Enter ("URL")

+91 80471-89100

driver.find_element_by_id("ID").Enter("username")
16/09/2023, 5:03 pm - Nimisiiyaaaa: Given two sorted arrays, merge them to form a single, sorted array with all items in non-decreasing order.

Example

a = [1, 2, 3]

b = [2, 5, 5]

Merge the arrays to create array cas follows:

a[Theta] < b[Theta] -> c = [a[Theta]] = [1]

a[1] = b[0] -> c = [a[0], b[0]] = [1, 2]

a[1] < b[1] -> c =[a[0], b[0], a[1]]= [1, 2, 2]

2, 3, 5, 5]

2

a[2] < b[1] -> c =[a[0],b[0] , a[1] , a[2]]= [1, 2, 2, 3] No more elements in a c=[ a[theta] , b[theta] , a[1], a[2], b[1], b[2] ]=[1,2,2, 3,5,5]
16/09/2023, 5:05 pm - Nimisiiyaaaa: A report containing a stock's prices for the past n days is provided to a data analyst in the array

O

2

2

30

3

3

The analyst is required to choose a subsequence of stock prices, called chosenDays[] in this explanation. The chosen subsequence of stock prices is balanced if the following condition holds:

stockPricefchosenDays[i]]-stockPrice[chosenDays[i - 1]]=chosenDays[i]-chosenDays[i-1], for i>0.

The score of the chosen subsequence is the sum of stock prices on the chosen days. Find the maximum possible score that can be obtained by choosing an optimally balanced subsequence.

Note:

• A subsequence is an ordered subset of an array's elements in the same sequential ordering as in the original array.

• A subsequence of length 1 is always balanced.

Example

Consider n=5, stockPrice [1, 5, 3, 7, 8].
16/09/2023, 5:05 pm - Supriya: <Media omitted>
16/09/2023, 5:07 pm - Nimisiiyaaaa: Then, the subsequence [5, 7, 8] can be chosen. Corresponding chosen days are [1, 3, 4] (considering 0-based indexing). Now,

stockPrice[3]-stockPrice[1]=7-5=2=3-1

• stockPrice[4]-stockPrice[3]=8-7=1=4-3

Thus, the subsequence is balanced. Score = 5 +7+ 8 = 20, which is maximum possible. So, the answer is 20.

Function Description

Complete the function getMaximumScore in the editor below.

The function getMaximumScore has the following parameter:

int stockPrice[n]: the stock prices for the past n

days

Returns

long_int: the maximum possible of an optimally chosen balanced subsequence

Constraints:

•1sns105

• 1s stockPrice[i] ≤ 109
16/09/2023, 5:08 pm - Nimisiiyaaaa: Input Format For Custom Testing

The first line contains an integer, n, the number of elements in the array stockPrice[] The next n lines contain an integer that

denotes stockPrice[i] (0 ≤ i<n).

▾ Sample Case 0

Sample Input For Custom Testing

STDIN

FUNCTION

3

1

stockPrice[] size, n = 3 stockPrice = [1, 2, 3]

→

D

2

3

Sample Output

6
16/09/2023, 5:08 pm - Nimisiiyaaaa: Explanation

The entire array can be chosen, and it will lead to a balanced sequence. The score obtained = 1 + 2

+3=6.

▾ Sample Case 1

Sample Input For Custom Testing

STDIN

FUNCTION

3

3

size, n = 3 stockPrice = [3, 2, 1]

→

2

1

Sample Output

3

Explanation

No more than 1 element can be chosen to make a balanced subsequence. Choose [3] to maximise the score.
16/09/2023, 5:11 pm - Supriya: def getMaximumScore(stockPrice):
    n = len(stockPrice)
    dp = [0] * n
    dp[0] = stockPrice[0]
    max_score = dp[0]
    
    for i in range(1, n):
        curr_score = stockPrice[i]
        for j in range(i-1, -1, -1):
            if stockPrice[i] - stockPrice[j] == i - j:
                curr_score = max(curr_score, dp[j] + stockPrice[i])
        max_score = max(max_score, curr_score)
        dp[i] = max_score
    
    return dp[n-1]

# Example usage
stockPrice = [1, 5, 3, 7, 8]
print(getMaximumScore(stockPrice))  # Output: 20

stockPrice = [1, 2, 3]
print(getMaximumScore(stockPrice))  # Output: 6
16/09/2023, 5:23 pm - Supriya: const int M = 1000000007;

int add(int x, int y) {
    if ((x += y) >= M) {
        x -= M;
    }
    return x;
}

int mul(long long x, long long y) {
    return x * y % M;
}

int solution(const string &s, const string &t, int k) {
    const int n = s.length();
    vector<int> dp = {1, 0};
    for (; k; --k) {
        dp = {mul(dp[1], n - 1), add(dp[0], mul(n - 2, dp[1]))};
    }
    int r = 0;
    for (int i = 0; i < n; ++i) {
        bool ok = true;
        for (int j = 0; ok && j < n; ok = s[(i + j) % n] == t[j], ++j)
        ;
        if (ok) {
            r = add(r, dp[!!i]);
        }
    }
    return r;
}
int main() {
    cout << solution("abcd", "cdab", 2) << endl;
    cout << solution("aaaa", "aaaa", 2) << endl;
    cout << solution("ababab", "ababab", 1) << endl;
    return 0;
}
16/09/2023, 5:33 pm - Supriya: def getMaximumScore(stockPrice):
    n = len(stockPrice)
    max_score = 0
    
    for i in range(n):
        score = stockPrice[i]
        j = i - 1
        while j >= 0:
            if stockPrice[i] - stockPrice[j] == i - j:
                score = max(score, stockPrice[i] + dp[j])
            j -= 1
        dp[i] = score
        max_score = max(max_score, score)
    
    return max_score

# Initialize dp list to store the maximum score at each index.
dp = [0] * len(stockPrice)
16/09/2023, 5:37 pm - Supriya: A covert agent has some crucial information stored in the form of an array of integersThe array contains sensitive information and it must not be revealed to anyone. However, there are few things about the array which are known.

ALL

An array is said to be analogous to the secret array if all of the following conditions are true:

The length of the array is equal to the length of the secret array. • Each integer in the array lies in the interval [lowerBound, upperBound)

3

. The difference between each pair of consecutive integers of the array must be equal to the difference between the respective pair of consecutive integers in the secret array. In other words, let the secret array be [ s[0] * 0.5[1] . s[n-1]]and let the analogous array be a[0] * a[1] ...a[n-1]] then (a[i - 1] - a[i]) must be equal to ( S[i - 1] -S[(]) for each / from 7 to n - t

Complete the

10 11

12

13

14

15

16

The function

The functio

1. INTEGER

2. INTEGE

3. INTEGE

17

18

19 int countAn

Lower Bound

20

21 1

22 > int main(

Given the value of the integers lowerBound and upperBound, inclusive, and the array of differences between each pair of consecutive integers of the secret array, find the number of arrays that are analogous to the secret arrayIf there is no array analogous to the secret array, return 0.

For example:

consecutiveDifference = [- 2, - 1, - 2, 5]

lowerBound=3

upperBound=10
16/09/2023, 5:38 pm - Supriya: left

Start with a value of 3.

Subtract consecutiveDistances[0],3-(-2)=5 Subtract consecutive Distances[1], 5-(-1)=6

C++20

Environment

1 > #include <bits/stdes

9

ALL

Subtract consecutive Distances[2], 6-(-2)=8 Subtract consecutiveDistances[3], 8-5-3

10

Complete the cou

11

12

The function is

Note that none of the values is out of bounds. All possible analogous arrays are:

13

14

15

The function ac

*1. INTEGER ART

[3.5.6.83]

[4,6,7,9,4)

(5,7,8,10,5]

16

17

* 2. INTEGER Le

3. INTEGER U

The answer is 3.

18

19 int countAnalo

LowerBound, in

Function Description

Complete the function countAnalogousArrays in the editor below.

20

3

countAnalogousArrays has the following parameter(s):

21 1

22 > int main()

int consecutiveDifference[n]: the differences between each pair of consecutive

integers in the secret array

int lowerBound, an integer

int upperBound, an integer

Returns:

int: the number of arrays that areranalogous to the secret array
16/09/2023, 5:39 pm - Supriya: The NLP enthusiasts of Hackerland are working on a string transformation algorithm. In a single operation, a string s can be transformed into another string by removing a suffix of th string and adding the removed suffix in front of the remaining string. For example, the string "abcd" can be transformed to "cdab" by removing the suffix "cd" and adding it to the front of the remaining string "ab".

Given two strings src and target of lowercase English characters and an integer k, find the number of ways to transform the string src to the string target using the given algorithm i exactly k steps. Since the answer can be large, report it modulo 109 + 7.

Note: Two ways are considered differen
16/09/2023, 5:41 pm - Supriya: if the sequence of indices chosen for breaking the suffix is different at 1 or more steps for the two ways.

Example

src="abcd", target = "cdab", k = 2.

1. "abcd" can be transformed to "bcda" by selecting the suffix "bcd" and "bcda" can be transformed to "cdab" by selecting the suffix "cda"

2. "abcd" can be transformed to "dabc" by selecting the suffix "d" and "dabc" can be transformed to "cdab" by selecting the suffix "c"

There are 2 ways to transform src to target in exactly k steps. Hence the answer is 2.

Function Description

Complete the function getNumWays in the editor below.

getNumWays has the following
16/09/2023, 5:41 pm - Supriya: getNumWays has the following parameter(s):

string src: the source string string target: the target string int k: the number of steps

Returns

int: the number of ways modulo

109+7

Constraints

2≤ length(src) < 1000

2 ≤ length(target) ≤ 1000

• 1≤ k≤ 106
16/09/2023, 5:42 pm - Nimisiiyaaaa: #include <vector>

using namespace std;

int countAnalogousArrays(vector<int> consecutiveDifference, int lowerBound, int upperBound) {
  // Calculate the length of the secret array.
  int secretArrayLength = consecutiveDifference.size() + 1;

  // Create a set to store the analogous arrays.
  set<vector<int>> analogousArrays;

  // Iterate over the lower bound and upper bound, and try to create an analogous array for each value.
  for (int i = lowerBound; i <= upperBound; i++) {
    // Create an empty vector to store the analogous array.
    vector<int> analogousArray;

    // Add the lower bound to the vector.
    analogousArray.push_back(i);

    // Iterate over the consecutive differences and add them to the vector.
    for (int j = 0; j < secretArrayLength - 1; j++) {
      analogousArray.push_back(analogousArray[j] + consecutiveDifference[j]);

      // Check if the analogous array is out of bounds.
      if (analogousArray[j] < lowerBound || analogousArray[j] > upperBound) {
        break;
      }
    }

    // If the analogous array is valid, add it to the set.
    if (analogousArray.size() == secretArrayLength) {
      analogousArrays.insert(analogousArray);
    }
  }

  // Return the number of analogous arrays.
  return analogousArrays.size();
}
16/09/2023, 5:43 pm - Supriya: #include <iostream>
#include <vector>

const int MOD = 1000000007;

int getNumWays(std::string src, std::string target, int k) {
    int src_len = src.length();
    int target_len = target.length();
    
    // Create a 3D DP array to store the number of ways.
    // dp[i][j][steps] represents the number of ways to transform src[i:] to target[j:] in steps.
    std::vector<std::vector<std::vector<int>>> dp(src_len + 1, std::vector<std::vector<int>>(target_len + 1, std::vector<int>(k + 1, 0)));
    
    // Initialize base case:
    // If both src and target are empty, there is one way (doing nothing).
    dp[0][0][0] = 1;
    
    // Fill in the DP array using dynamic programming.
    for (int steps = 1; steps <= k; steps++) {
        for (int i = 0; i <= src_len; i++) {
            for (int j = 0; j <= target_len; j++) {
                // Transition 1: Do nothing (no suffix removal/addition).
                dp[i][j][steps] = dp[i][j][steps - 1];
                
                // Transition 2: Remove a suffix from src.
                if (i > 0) {
                    dp[i][j][steps] = (dp[i][j][steps] + dp[i - 1][j][steps - 1]) % MOD;
                }
                
                // Transition 3: Add a suffix to src.
                if (j > 0) {
                    dp[i][j][steps] = (dp[i][j][steps] + dp[i][j - 1][steps - 1]) % MOD;
                }
            }
        }
    }
    
    return dp[src_len][target_len][k];
}

int main() {
    std::string src = "abcd";
    std::string target = "cdab";
    int k = 2;
    
    int result = getNumWays(src, target, k);
    std::cout << result << std::endl; // Output should be 2
    
    return 0;
}
16/09/2023, 5:44 pm - Supriya: def countAnalogousArrays(consecutiveDifference , lowerBound , upperBound):

    maxdiff = float('-inf')
    mindiff = float('inf')
    runningsum = 0
    if len(consecutiveDifference) == 0:
        return 0

    if upperBound < lowerBound :
        return 0

    for diff in consecutiveDifference:
        runningsum+=diff
        if runningsum > maxdiff:
            maxdiff = runningsum

        if runningsum < mindiff:
            mindiff = runningsum

    maxvalidupperbound = upperBound + mindiff if upperBound+mindiff < upperBound else upperBound
    minvalidlowerbound = lowerBound + maxdiff if lowerBound + maxdiff > lowerBound else lowerBound

    if maxvalidupperbound >= minvalidlowerbound:
        return maxvalidupperbound - minvalidlowerbound + 1
    else:
        return 0
16/09/2023, 6:05 pm - Supriya: def countAnalogousArrays(consecutiveDifference, lowerBound, upperBound):
    max_diff = 0
    min_diff = 0
    running_sum = 0

    for diff in consecutiveDifference:
        running_sum += diff
        max_diff = max(max_diff, running_sum)
        min_diff = min(min_diff, running_sum)

    max_valid_upper_bound = upperBound + min_diff
    min_valid_lower_bound = lowerBound + max_diff

    return max(0, max_valid_upper_bound - min_valid_lower_bound + 1)
16/09/2023, 6:06 pm - Supriya: <Media omitted>
16/09/2023, 6:07 pm - Supriya: Ye chal rha hai??
16/09/2023, 6:11 pm - Nimisiiyaaaa: Abhi lokha nahi
16/09/2023, 6:11 pm - Nimisiiyaaaa: 4uk
16/09/2023, 6:11 pm - Nimisiiyaaaa: Ruk
16/09/2023, 6:13 pm - Supriya: Ye wala
16/09/2023, 6:19 pm - Supriya: <Media omitted>
16/09/2023, 6:31 pm - Supriya: #include <iostream>
#include <vector>

const int MOD = 1000000007;

int getNumWays(std::string src, std::string target, int k) {
    int n = src.size();
    int m = target.size();

    // Create a 3D DP array to store the number of ways
    // dp[i][j][s] represents the number of ways to reach
    // the j-th character of target using s operations
    std::vector<std::vector<std::vector<int>>> dp(n + 1, std::vector<std::vector<int>>(m + 1, std::vector<int>(k + 1, 0)));

    // Base case: If k is 0, there is only one way to reach the empty string
    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= m; j++) {
            dp[i][j][0] = 1;
        }
    }

    // Fill the DP array
    for (int s = 1; s <= k; s++) {
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                // If the current characters match, we can choose to either:
                // 1. Use a step to match the characters and move to the previous state
                // 2. Not use a step and continue with the current state
                if (src[i - 1] == target[j - 1]) {
                    dp[i][j][s] = (dp[i - 1][j - 1][s - 1] + dp[i][j][s - 1]) % MOD;
                }

                // Continue without using a step
                dp[i][j][s] = (dp[i][j][s] + dp[i][j - 1][s]) % MOD;
            }
        }
    }

    return dp[n][m][k];
}
17/09/2023, 10:00 am - Supriya: Isnw bhej
17/09/2023, 10:00 am - Supriya: Kya kya info daalni h
17/09/2023, 10:05 am - Supriya: Game Mario

Diego is an arcade game enthusiast. His favourite game is Super Mario Bros, in which two Italian plumbers Mario and Luigi try to rescue Princess Toadstool from the evil King Bowser in the Mushroom Kingdom.

To reach the Princess, Mario needs to cross a long trench. Luckily for him, the Mushroom kingdom is full of bridges floating in the air, across which Mario can jump and cross the trench. Every bridge he lands on also earns him certain points. The only restriction he has, is that he cannot jump from a higher bridge to a lower bridge.

Diego needs k points to move to the next level in the game. He is trying to figure out if can he make Mario jump in such a way that he can earn at least k points, and if so, how many such different ways are there. Can you write a program to help Diego?

Complete the function computePossibilities which accepts four arguments as below, and returns

the number of ways to succeed in the game:

The input parameters are:

1. A long Integer kwhich indicates the minimum number of points Diego needs 2. An Integer Nwhich indicates the number of floating bridges

3. An array of integers heights which indicates the heights of N floating bridges

4. An array of integers points which indicates the points of N floating bridges

Constraints:

1 ≤ N ≤ 40, the number of floating bridges

1sks 108, the minimum points Diego needs 1s H, Pis 109, the heights and points of the ith bridge

Input Format:

The first line of input contains k, the minimum points. The second line of input contains N, the number of floating bridges

Next N lines of input contain the heights (H) of N bridges Next line of input again contains N, the number of floating bridges Next N lines of input contain the points (P) of N bridges.
17/09/2023, 10:07 am - Supriya: Output Format:

Single line of output has the number of different ways Mario can cross the trench while earning at least k points.

Sample Input 0:

6
4
2
4
4


3
2
3
3
4
Sample Output 0:
3
Explanation 0:

Diego needs 6 points at least, and there are 4 floating bridges.

The first bridge is at height 2, the second and third bridges are at height 4 and the last bridge is at


height 3.

The first bridge has 2 points, the second and third bridges have 3 points each and the last bridge has 4 points.

The situation can be shown as below.
17/09/2023, 10:08 am - Supriya: There are only three ways to obtain 6 or more points:

Option 1: Wall 1-> Wall 2-> Wall 3 -> End of Trench. Points earned = 2+3+3=8

Option 2: Wall 2> Wall 3 > End of Trench. Points earned = 3+3=6

Option 3: Wall 1 -> Wall 4 -> End of Trench. Points earned 2+4=6 Hence output is 3.

Sample Input 1:
8
4

4

2

2

4

4

2

3

3
4
Sample Output 1:

1

Explanation 1:

Mario's situation is shown below:
17/09/2023, 10:08 am - Supriya: There is only one way to score at least 8 points: Option 1: Wall 2-> Wall 3-> Wall 4→→ End of Trench. Points earned = 3+3+4=10
17/09/2023, 10:10 am - Supriya: <Media omitted>
17/09/2023, 10:10 am - Supriya: <Media omitted>
17/09/2023, 10:10 am - Supriya: <Media omitted>
17/09/2023, 10:10 am - Supriya: <Media omitted>
17/09/2023, 10:40 am - Supriya: Array Division

An array arr of n integers is to be divided into different groups such that each element belongs to exactly one group and the size of each group is at least m.

The cost of the division is defined as the maximum value of the difference between the maximum and minimum elements of a particular groupFor example, if an array [1, 2, 3, 4, 5] is divided into two groups 1, 3][2, 4, 5]the cost is max (3 - 1, 5 - 2) = 3

Given arr and an integer m, find the minimum possible cost of dividing the array into groups of size greater than or equal to m.

Example

Suppose n = 5 arr= [5, 11, 13, 412]and m = 2

It is optimal to divide the array into two groups [5, 4] and [11, 13, 12] with the cost max ( 5 - 4 ,13-

11)=2.

Function Description

Complete the function getMinCost in the editor below

getMinCost takes the following arguments: int am[n] : the given input array int m: the minimum size of each group

Returns

int: the minimum cost of dividing the array

Constraints

• 1 <= m <= n <=2^ * 10^ 5

• 1<= arr \ i]<=10^ 9
17/09/2023, 10:40 am - Supriya: int arr[n]: the given input array

int m: the minimum size of each group

Returns

int: the minimum cost of dividing the array

Constraints

•1smsns2*105

• 1 samtis 109

► Input Format For Custom Testing

▾ Sample Case 0

Sample Input For Custom Testing

STDIN

FUNCTION

6

93

arr[] size 6

arr [93, 32, 88, 9, 58, 15]

→

→

m=3

F

32 88

9

58

15

3

Sample Output

35

Explanation

It is optimal to divide the array into two groups [32, 9, 15] and [93, 88, 58] with cost max(32-9,

93-58)-35.

► Sample Case 1
17/09/2023, 10:41 am - Supriya: Sample Input For Custom Testing

STDIN

3

FUNCTION

arr[] size n = 3

34

3

r = [34, 3, 75]

75

2

m = 25

Sample Output

72

Explanation

It is not possible to divide the arrayHence the answer is 75 * 3 = 72
17/09/2023, 10:49 am - Supriya: Array Division

An array arr of n integers is to be divided into different groups such that each element belongs to exactly one group and the size of each group is at least m.

The cost of the division is defined as the maximum value of the difference between the maximum and minimum elements of a particular groupFor example, if an array [1, 2, 3, 4, 5] is divided into two groups [1, 3][2, 4, 5]the cost is max (3 - 1, 5 - 2) = 3

Given arr and an integer m, find the minimum possible cost of dividing the array into groups of size greater than or equal to m.

Example

Suppose n = 5, arr= [5, 11, 13, 4,12]and m = 2

It is optimal to divide the array into two groups [5, 4] and [11, 13, 12] with the cost max ( 5 - 4 ,13-

11)=2.

Function Description

Complete the function getMinCost in the editor below

getMinCost takes the following arguments: int arr[n] : the given input array int m: the minimum size of each group

Returns

int: the minimum cost of dividing the array

Constraints

• 1 <= m <= n <=2^ * 10^ 5

• 1<= arr [ i]<=10^ 9              int arr[n]: the given input array

int m: the minimum size of each group

Returns

int: the minimum cost of dividing the array


▾ Sample Case 0

Sample Input For Custom Testing

STDIN                FUNCTION

6     ->                 arr[] size n = 6

93      ->             arr = [93, 32,88,9,58,15]
32                                 
88
9

58

15

3

Sample Output

35

Explanation

It is optimal to divide the array into two groups [32, 9, 15] and [93, 88, 58] with cost max(32-9,
93-58)=35.

► Sample Case 1                                                                                                                                                                          Sample Input For Custom Testing

STDIN             FUNCTION

3                ->   arr[] size n = 3

34               ->  arr = [34, 3, 75]
3
75

2     ->     m = 2

Sample Output

72

Explanation

It is not possible to divide the arrayHence the answer is 75 * 3 = 72               provide the code in c++ considering all possible test cases
17/09/2023, 11:15 am - Supriya: Alice's city is divided in the form of a square grip, she is currently at (0, 0) and needs to reach her home in the shortest possible time which is at (5, 6). She can only travel along one the axis (North, South, East and West) and she walks at a constant speed. How many possible paths can she take?

09 mins

ALL

Pick ONE option

540

O

1280

924

3

None of the above

Clear Selection
17/09/2023, 11:16 am - Supriya: What is the probability of drawing a ticket which is a multiple of 5 or 7 from a bunch of tickets serially numbered from 1 to 50?

Pick ONE option

21/50

4/25

9/25

4/50

Clear Selection
17/09/2023, 11:17 am - Supriya: Two sea trawlers left a sea port simultaneously in two mutually perpendicular directions. Half an hour later, the shortest distance between them was 17 km, and another 15 min later, one sea trawler was 10.5 km farther from the origin than the other. Find the speed of each sea trawler.

Pick ONE option

16 km/hr, 30 km/hr

18 km/hr, 24 km/hr

20 km/hr, 22 km/hr

18 km/hr, 36 km/hr
17/09/2023, 11:18 am - Supriya: 6. Aptitude MCQ

A three digit number is divisible by 13 as well as 19. When it is divided by 23, the remainder obtained is 5 and when it is divided by 37, the remainder obtained is 1. What number should be subtracted from this number to obtain a perfect cube?

Pick ONE option

12

7

31

21
17/09/2023, 11:19 am - Supriya: Read the following information carefully and answer the questions given below.

Mr. P has to schedule six different seminars on different subjects among Math, Hindi, English, Science, History and Geography. Each of these seminars is organized on a different day from Monday to Saturday in a week and each of these seminars is handled by a different professor among Mr. A. Mr. B, Mr. C, Mr. D. Mr. E and Mr. F.

The following information is also known:

(1) Mr. B handled the seminar on English but not before the seminar handled by Mr. C (11) The seminar on History is held either on the first day or on the last day of the week.

(III) Mr. F handled the seminar on Thursday and Mr. E cannot handle Geography.

(IV) The seminars on Science and Hindi are to be organized on two consecutive days and neither of them is organized on Wednesday. (M) Mr. A will handle his seminar on exactly the 3rd day after the day on which Mr. E handles his seminar.

(VI) The seminar on Science is to be held on the immediately next day after Mr. Chandles his seminar and Mr. C will not handle his seminar on the first day.

Q. Who handles seminar on Monday?

Pick ONE option

Mr. D

Mr. E

Mr. B

Mr. C
17/09/2023, 11:20 am - Supriya: Read the following information carefully and answer the questions given below.

Mr. P has to schedule six different seminars on different subjects among Math, Hindi, English, Science, History and Geography. Each of these seminars is organized on a different day from Monday to Saturday in a week and each of these seminars is handled by a different professor among Mr. A, Mr. B, Mr. C, Mr. D, Mr. E and Mr. F.

The following information is also known:

(1) Mr. B handled the seminar on English but not before the seminar handled by Mr. C. (II) The seminar on History is held either on the first day or on the last day of the week.

(III) Mr. F handled the seminar on Thursday and Mr. E cannot handle Geography.

(IV) The seminars on Science and Hindi are to be organized on two consecutive days and neither of them is organized on Wednesday. (Mr. A will handle his seminar on exactly the 3rd day after the day on which Mr. E handles his seminar.

(VI) The seminar on Science is to be held on the immediately next day after Mr. Chandles his seminar and Mr. C will not handle his seminar on the first day.

Q. Who handles seminar on Geography?

Pick ONE option

Mr. F

Mr. A

O Mr. C

Mr. D
17/09/2023, 5:43 pm - Supriya: I am writing to express my genuine interest in joining your esteemed organization. With a track record that showcases my aptitude in time management, an innate ability to learn rapidly, and a knack for grasping intricate concepts, I am confident in the value I can bring to D. E. Shaw. Beyond these traits, I also have a demonstrated history of team and event management, as seen through my active participation in organizing and attending seminars, events, and workshops.

One of my most distinguishing strengths is my proactive approach towards self-improvement and development. To offer a glimpse into this: I recently spearheaded an initiative called "Mentor Mix." The idea germinated from a simple observation – the palpable increase in motivation levels among our juniors after they received guidance from their seniors. By organizing this event, I not only bridged the gap between senior and junior colleagues but also created an environment conducive to learning, growth, and mutual respect.

Outside of organized events, I immerse myself in problem-solving every day. This continuous endeavor keeps me sharp, adaptable, and ready to tackle new challenges head-on. I believe that the ethos of D. E. Shaw, with its emphasis on innovation and a solution-oriented approach, is harmonious with my personal and professional values.

Your organization’s reputation for fostering talent, valuing collaboration, and pushing boundaries resonates with what I prioritize in my daily work. Joining D. E. Shaw will not only provide me with a platform to elevate my professional capabilities but also align me with a group of like-minded individuals who are as committed as I am to excellence.

In my eyes, D. E. Shaw & Co. represents more than just a career opportunity. It offers a journey of unparalleled growth, learning, and the chance to be part of something transformative. I am eager to contribute my skills, passion, and experiences to further the company's already remarkable trajectory and, in the process, embark on a journey of personal and professional growth.

I am looking forward to the prospect of collaborating with the D. E. Shaw team and taking on the myriad challenges that lie ahead with zest, determination, and unwavering commitment.
17/09/2023, 6:21 pm - Nimisiiyaaaa: Given an array of integers, arr, of size n, it is to be divided into four non-overlapping subarrays (possibly such that the difference between the sum of the first and third subarray, and the sum of the second and fourth subarray is the maximum

Define sunt r on an array arr, as the sum of all the elements from index / (Indusive) to index (non-inclusive), i.e. sum(l, r) = arr[1] + arr[i+1].... + arr[r-1]. Suppose are three integers, Osisjsken, that divide the array into 4 subarrays as follows: [00 Bj. 0, k) [k, n) then the task is to determine the maximum value of sum(0, 1)-sum(i, j)+sum(j, k)- sum(k, n).

Note: An array B is said to be a subarray of an arraya if B can be obtained

from Aby deletion of several (possibly, zero or all) elements from the beginning and

several (possibly, zero or all) elements from the end. Sum(i, 1) = 0 i.e., there can be

an empty subarray.

Example

Suppose n-6 and arr-1-3, 4, 5, 2, 6, 5] it is optimal to divide the array as-[3, 4], [5], [2, 6], [-5] having sums 1. -5, 8 and -5 respectively. Hence the required difference is 1+8-(-5+5)=19.
17/09/2023, 6:21 pm - Nimisiiyaaaa: Complete the function getSubarraySum in the editor below.

getSubarraySum has the following parameter.

int arr[n]: the given input array of integers

ALL

Returns

long int: the maximum possible difference after optimally dividing the array

Constraints

•1505105 •-10 samrtil s109
17/09/2023, 6:23 pm - Nimisiiyaaaa: Input Format For Custom Testing

The first line contains an integer, n, that denotes the number of elements in arr.

Each of the next n lines contains an integer, arr[i].

▾ Sample Case 0

Sample Input For Custom Testing

FUNCTION

STDIN

0 = 4

arr

= [1,

2,

1, -5]

2

4

-5

Sample Output

Explanation

Given n=4, and arr=[1, 2, 1, -5].

It is optimal to divide the given array as follows: [], []. [1, 2, 1], [-5], which have sums 0, 0, 4 and -5 respectively. Thus the required maximum difference is 0+4- (0+-5)=9.
17/09/2023, 6:23 pm - Supriya: def max_difference_subarrays(arr):
    n = len(arr)
    max_difference = float('-inf')

    for i in range(n):
        for j in range(i + 1, n):
            for k in range(j + 1, n):
                sum1 = sum(arr[0:i + 1]) - sum(arr[i:j])
                sum2 = sum(arr[k:n]) - sum(arr[0:k])
                max_difference = max(max_difference, sum1 - sum2)

    return max_difference

# Example usage
arr = [14, 10, 1, 20, 21, 5, 6]
result = max_difference_subarrays(arr)
print(result)
17/09/2023, 6:27 pm - Supriya: vector<long> findSum(vector<int>numbers, vector<vector<int>> queries)
{
   vector<long>result;
   long sum = 0;
   int count = 0;
   for(auto i : queries)
   {
      sum = 0;
      count = 0;
      int l = i[0] - 1;
      int r = i[1]-1;
      int x = i[2];
      for(int j =l; j<r;j++)
      {
         sum+=numbers[j]==0?x:numbers[j]; 
      }
      result.push_back(sum);
   }
   return result;
}
17/09/2023, 6:29 pm - Supriya: void kmax(int arr[], int k, int n) {
 
    // In each iteration it will give
    // the ith maximum subarray sum.
    for(int c = 0; c < k; c++){
 
        // Kadane's algorithm.
        int max_so_far = numeric_limits<int>::min();
        int max_here = 0;
 
        // compute starting and ending
        // index of each of the sub-array.
        int start = 0, end = 0, s = 0;
        for(int i = 0; i < n; i++)
        {
            max_here += arr[i];
            if (max_so_far < max_here)
            {
                max_so_far = max_here;
                start = s;
                end = i;
            }
            if (max_here < 0)
            {
                max_here = 0;
                s = i + 1;
            }
        }
 
        // Print out the result.
        cout << "Maximum non-overlapping sub-array sum"
             << (c + 1) << ": "<< max_so_far
             << ", starting index: " << start
             << ", ending index: " << end << "." << endl;
 
        // Replace all elements of the maximum subarray
        // by -infinity. Hence these places cannot form
        // maximum sum subarray again.
        for (int l = start; l <= end; l++)
            arr[l] = numeric_limits<int>::min();
    }
    cout << endl;
}
17/09/2023, 6:35 pm - Supriya: Given an array of integers, arr, of size n, it is to be divided into four non-overlapping subarrays (possibly such that the difference between the sum of the first and third subarray, and the sum of the second and fourth subarray is the maximum

Define sum(l,r) on an array arr, as the sum of all the elements from index / (Indusive) to index (non-inclusive), i.e. sum(l, r) = arr[l] + arr[l+1].... + arr[r-1]. Suppose i, j, k  are three integers, 0<=i<=j<=k<n , that divide the array into 4 subarrays as follows: [0 ,i) .[i,j),[j, k) [k, n) then the task is to determine the maximum value of sum(0, i)-sum(i, j)+sum(j, k)- sum(k, n).

Note: An array B is said to be a subarray of an array A if B can be obtained

from A by deletion of several (possibly, zero or all) elements from the beginning and

several (possibly, zero or all) elements from the end. Sum(i, i) = 0 i.e., there can be

an empty subarray.

Example

Suppose n=6 and arr=[-3, 4, -5, 2, 6, -5] it is optimal to divide the array as-[-3, 4], [5], [2, 6], [-5] having sums 1. -5, 8 and -5 respectively. Hence the required difference is 1+8-(-5+-5)=19.Complete the function getSubarraySum in the editor below.

getSubarraySum has the following parameter.

int arr[n]: the given input array of integers

ALL

Returns

long int: the maximum possible difference after optimally dividing the array

Constraints

•1<=n<=10^5                   -10^9<=arr[i] <=10^9                  Input Format For Custom Testing

The first line contains an integer, n, that denotes the number of elements in arr.

Each of the next n lines contains an integer, arr[i].

▾ Sample Case 0

Sample Input For Custom Testing

FUNCTION

STDIN

 4        _> n=4

1              ->arr= [1,2,1,-5]



2

4

-5

Sample Output        9

Explanation

Given n=4, and arr=[1, 2, 1, -5].

It is optimal to divide the given array as follows: [], []. [1, 2, 1], [-5], which have sums 0, 0, 4 and -5 respectively. Thus the required maximum difference is 0+4- (0+-5)=9. write the code in c++ fro this .writre optimewd code . start function like long getSubarraySum(vector<int>arr)
17/09/2023, 6:37 pm - Supriya: <Media omitted>
17/09/2023, 6:38 pm - Supriya: <Media omitted>
17/09/2023, 6:38 pm - Supriya: <Media omitted>
17/09/2023, 6:38 pm - Supriya: <Media omitted>
17/09/2023, 6:43 pm - Nimisiiyaaaa: <Media omitted>
17/09/2023, 6:43 pm - Nimisiiyaaaa: <Media omitted>
17/09/2023, 6:43 pm - Supriya: Example

Suppose n = 3 , d = 2 and starts = [3,2, 3]


The given ranges are [ [3, 5] [2,4][3, 4]]

One integer each has to be chosen from the given ranges such that the difference between any pair of chosen integers is at least dist The aim is to maximize such an integer dist. It is optimal to choose dist = 1.

• The integer 3 can be chosen from the

1st range -[3, 5] (1-based indexing) • The integer 2 can be chosen from the 2nd range - [2,4]

• The integer 4 can be chosen from the 3rx range -  [3, 5]


The difference between any pair of chosen integers is at least 1. So 1 is the maximum possible value of dist.

Function Description Complete the function getMaxDist in editor below.
17/09/2023, 6:46 pm - Supriya: Constraints

• 2≤n<=10^5

1<= starts[i]≤10^14

1≤d≤ 10^14

.

► Input Format For Custom Testing

▾ Sample Case 0

Sample Input For Custom Testing

STDIN            FUNCTION

n = 4         ->      starts = [3, 1,3, 3]
17/09/2023, 6:56 pm - Nimisiiyaaaa: A set of n integer ranges (both ends inclusive) of d length each is given. The starting point of these ranges is given in an array starts. So the ith range (starting with zero index) consists of integers from starts[i] to starts[i] + d. One integer each is to be chosen from all of the ranges, subject to the condition that the difference between any pair of chosen integers is at least dist.

Given the starting points of the ranges, in an array starts, and the length d of each range, the task is to determine the maximum possible value of dist such that it is possible to choose an integer from each of the ranges satisfying the above condition.
5
Example
Suppose n=3, d= 2 and starts = [3, 2,3]                     The given ranges are -[[3, 5], [2,4], [3,
5]]
One integer each has to be chosen from
the given ranges such that the difference between any pair of chosen integers is at least dist. The aim is to maximize such an integer dist. It is optimal to choose dist = 1.

• The integer 3 can be chosen from the 1st range - [3, 5] (1-based indexing)
The integer 2 can be chosen from the
2nd range - [2,4]

• The integer 4 can be chosen from the
3rd range - [3, 5]

The difference between any pair of chosen integers is at least 1. So 1 is the maximum possible value of 
Function Description Complete the function getMaxDist in the editor below.                                                   Constraints
• 2≤n<=10^5
1 ≤ starts[i]≤ 10^14
1≤d≤ 10^14


write a python code(function) for this .there are many hidden test cases.write excellent code that pass all test case at one time .use all the knowledge you have
17/09/2023, 6:57 pm - Nimisiiyaaaa: <Media omitted>
17/09/2023, 6:57 pm - Nimisiiyaaaa: <Media omitted>
17/09/2023, 6:57 pm - Nimisiiyaaaa: <Media omitted>
17/09/2023, 6:59 pm - Supriya: Explanation

Given n = 4, d= 1 and starts = [3, 3, 3, 3]. The given ranges are - [[3, 4], [3, 4], [3, 4], [3, 4]]

It is optimal to set dist = 0.

• The integer 3 can be chosen from the 1st range-[3, 4] (1-based indexing)

• The integer 3 can be chosen from the 2nd range-[3, 4]

The integer 3 can be chosen from the

3rd range-[3, 4] • The integer 3 can be chosen from the 4th

range-[3, 4]

The difference between any pair of chosen integers is at least 0. So 0 is the maximum valid choice for dist.
17/09/2023, 7:04 pm - Supriya: Sample input 1
STDIN     FUNCTION

3          ->      n = 3
5          ->     starts = [5, 6, 12]
6
12
2        ->     d = 2

Sample Output

3

Explanation

Given n = 3 , d = 2 and starts = [5, 6, 12] . The given ranges are- - [ [5, 7] , [6, 8], [12, 14] ]

It is optimal to set dist = 3.

The integer 5 can be chosen from the 1st range-[15, 7] (1-based indexing)

• The integer 8 can be chosen from the

2nd range -  [6, 8]

• The integer 12 can be chosen from the 3rd range-[12, 14]

The difference between any pair of chosen integers is at least 3. So 3 is the maximum valid choice for dist.
17/09/2023, 7:05 pm - Nimisiiyaaaa: <Media omitted>
17/09/2023, 7:06 pm - Nimisiiyaaaa: <Media omitted>
17/09/2023, 7:31 pm - Nimisiiyaaaa: A three digit number is divisible by 13 as well as 19. When it is divided by 23, the remainder obtained is 5 and when it is divided by 37, the remainder obtained is 1. What number should be subtracted from this number to obtain a perfect cube?

ALL

Pick ONE option

9

12

31

21
17/09/2023, 7:32 pm - Nimisiiyaaaa: An examination was taken by 500 students. There were three papers viz., Aptitude, Reasoning and English. The number of students who passed in Aptitude, Reasoning and English are respectively 226, 263 and 323. 106 students passed in both Aptitude and Reasoning, 152 students passed in both Reasoning and English while 142 students passed in both Aptitude and English. The number of students who passed only in English is 94. What is the difference in the number of students who passed in all the three subjects and the number of students who failed in all the three subjects?

ALL

Pick ONE option

42

36

77

64 <This message was edited>
17/09/2023, 7:33 pm - Nimisiiyaaaa: Read the following information carefully and answer the questions given below.

ALL

Martial is a karate school where five kids of the same neighbourhood take karate classes. All of them are of different age (from 8 years to 12 years) and have received a different belt for their performances. Also, the time when each of them joined the school is different Some of the information of the kids names, their ages their belts and their duration till now in the school is given below:

The youngest among the kids has got the white belt and he joined the school just 10 days ago. The one who joined the school one year ago is the oldest ()Pa is a green belt holder and she is two years older than Radhika. The one who joined 6 weeks ago is two years younger than Sweta. The red belt holder joined 3 months ago. Arun is not the orange belt holder.

(V) Zubin is not the blue belt holder. The orange belt holder did not join one year ago.

(M)Sweta did not join 9 months ago and she is not the red belt holder.

Q. Who is the blue belt holder?

Pick ONE option

The one who joined one year ago

Radhika


The one who joined 6 weeks ago

Arun
17/09/2023, 7:35 pm - Nimisiiyaaaa: Read the following information carefully and answer the questions given below:

ALL

Martial is a karate school where five kids of the same neighbourhood take karate classes. All of them are of different age (from 8 years to 12 years) and have received a different belt for their performances. Also, the time when each of them joined the school is different. Some of the information of the kids' names. their ages, their belts and their duration till now in the school is given below:

(1) The youngest among the kids has got the white belt and he joined the school just 10 days ago. The one who joined the school one year ago is the oldest. (II) Pia is a green belt holder and she is two years older than Radhika. The one who joined 6 weeks ago is two years younger than Sweta. (III) The red belt holder joined 3 months ago. Arun is not the orange belt holder.

(IV) Zubin is not the blue belt holder. The orange belt holder did not join one year ago.

(V) Sweta did not join 9 months ago and she is not the red belt holder.

Q. Who among the following is (are) not older than Radhika?

1. Arun

11. Zubin

III. Sweta

Pick ONE option

Only (I)

Only (II)

Only (III)

Both (I) and (II)
17/09/2023, 7:37 pm - Nimisiiyaaaa: 'A' started a business by investing 26400 and 'B' joined the business two months later. At the end of the year, 'B' received 35/83 rd of the total profil How much amount did 'B' invest in the business?

Pick ONE option


Rs. 43230


Rs. 5600

Rs. 4800

Rs. 5660
17/09/2023, 7:38 pm - Nimisiiyaaaa: The Average age of all the employees of ACE org, was 42 years. There are two divisions: X and 2 in the organisation. The average age of the divisions were 37 years and 48 years respectively. There were 14 more members in x than 2. This week a few employees of Z left the organisation and the ratio of the Employees of X and Z became 7.5 respectively. How many employees have left "Z"?

Pick ONE option

7

12

7

10
18/09/2023, 3:15 pm - Supriya: https://www.google.com/about/careers/applications/jobs/results/88906079414428358-student-researcher-2023
18/09/2023, 3:15 pm - Supriya: https://cse.noticebard.com/internships/google-winter-internship-2024/
18/09/2023, 3:15 pm - Supriya: https://cse.noticebard.com/internships/software-engineer-internship-microsoft/
18/09/2023, 3:15 pm - Supriya: https://internship.aicte-india.org/
20/09/2023, 9:08 am - Supriya: <Media omitted>
20/09/2023, 9:08 am - Supriya: <Media omitted>
20/09/2023, 9:08 am - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 2:41 pm - Supriya: <Media omitted>
22/09/2023, 6:24 pm - Supriya: Dear All, 
PayPal is inviting for the position of Interns for 2025 students. 

Application Links:

We request all students to complete the application process by 25th September, Monday.  


*Role:Software Engineer Intern*

*B. Tech/BE Computer Science or equivalent.* 

*Bachelor’s students graduating in 2025*

Link to Apply👇:

https://wd1.myworkdaysite.com/recruiting/paypal/jobs/job/Bangalore-Karnataka-India/Software-Engineer---2024-Summer-Intern_R0107546

*Role:Data Analyst Intern*

*B. Tech/BE Computer Science or equivalent.*


*Bachelor’s students graduating in 2025*

Link to Apply👇:
https://wd1.myworkdaysite.com/recruiting/paypal/jobs/job/Bangalore-Karnataka-India/Data-Analyst-Intern---2024-Summer-Intern_R0107547

 
Compensation Details

Intern Roles: *Software Engineer Intern and Data Analyst Intern* 


MONTHLY STIPEND

*INR 100,000/-*

SIGN ON BONUS

*INR 100,000/-*

*Note: This intern opportunity is meant only for 2025 Passout students (B. Tech/BE Computer Science students graduating in 2025*)

Thanks 
ICT Academy
24/09/2023, 5:21 pm - Supriya: <Media omitted>
24/09/2023, 5:21 pm - Supriya: <Media omitted>
24/09/2023, 5:22 pm - Supriya: 3. Question 3

In the year 2023, a new variant of the Omicron virus has led to a dramatic loss of human lives worldwide and presented an unprecedented challenge to public distribution systems. A team of professors and virologists at the World Health Organization were researching the number of variants of the new mutant XE va virus. It was found that in the year 2020, it was 10,000, then it increased by 60% in 2021 and then for 2022, it increased by 25% over the previous year. The number of variants of the new variant of the virus found in the present year (Qc), the number of variants of the virus found in the previous year (Op) and of the virus found in the previous-to-previous year (Qp - 1) are associated to each other by the following equation (This association holds good for any given

QcQp+Zx log100p-1 where Z is a constant.

log:02-0.3010

Find the number of variants of the new mutant
24/09/2023, 5:22 pm - Supriya: <Media omitted>
24/09/2023, 5:22 pm - Supriya: <Media omitted>
24/09/2023, 5:23 pm - Supriya: 4. Question 4

In a quadratic equation a * x ^ 2 + bx + 4 = 0 (where x is a non-zero real number), find the total number of ordered pairs (a, b) possible such that the roots of the equalAlso given that a and b are integers and a lie between -100 and 100 (both value inclusive)
24/09/2023, 5:23 pm - Supriya: <Media omitted>
24/09/2023, 5:23 pm - Supriya: <Media omitted>
24/09/2023, 5:24 pm - Supriya: <Media omitted>
24/09/2023, 5:24 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:26 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:33 pm - Supriya: <Media omitted>
24/09/2023, 5:34 pm - Supriya: <Media omitted>
24/09/2023, 5:34 pm - Supriya: <Media omitted>
24/09/2023, 5:40 pm - Nimisiiyaaaa: Q14       16
24/09/2023, 5:41 pm - Nimisiiyaaaa: Q4.     20
24/09/2023, 5:41 pm - Nimisiiyaaaa: Q3.    20000.    1000
24/09/2023, 5:41 pm - Nimisiiyaaaa: Q5.      150
24/09/2023, 5:46 pm - Nimisiiyaaaa: Q28.... C
24/09/2023, 5:46 pm - Supriya: 66 - b 67 - c 68- d 69 - a 70 - d
24/09/2023, 5:46 pm - Nimisiiyaaaa: Q27   ...... D
24/09/2023, 5:48 pm - Nimisiiyaaaa: Paper folf wala a
24/09/2023, 5:48 pm - Supriya: Paper fold -a
24/09/2023, 5:49 pm - Nimisiiyaaaa: 38.      D
24/09/2023, 5:51 pm - Nimisiiyaaaa: Each of p and q chocolate 109/121
24/09/2023, 5:52 pm - Supriya: <Media omitted>
24/09/2023, 5:53 pm - Supriya: <Media omitted>
24/09/2023, 5:55 pm - Supriya: <Media omitted>
24/09/2023, 5:55 pm - Supriya: <Media omitted>
24/09/2023, 5:58 pm - Nimisiiyaaaa: Water image..... A
24/09/2023, 5:58 pm - Supriya: <Media omitted>
24/09/2023, 5:59 pm - Supriya: <Media omitted>
24/09/2023, 6:03 pm - Nimisiiyaaaa: 23.....LYZCG
24/09/2023, 6:03 pm - Supriya: <Media omitted>
24/09/2023, 6:06 pm - Supriya: <Media omitted>
24/09/2023, 6:10 pm - Supriya: <Media omitted>
24/09/2023, 6:12 pm - Supriya: <Media omitted>
24/09/2023, 6:16 pm - Supriya: <Media omitted>
24/09/2023, 6:25 pm - Supriya: <Media omitted>
24/09/2023, 6:25 pm - Supriya: <Media omitted>
24/09/2023, 6:32 pm - Supriya: <Media omitted>
24/09/2023, 6:32 pm - Supriya: <Media omitted>
24/09/2023, 6:33 pm - Supriya: <Media omitted>
24/09/2023, 6:36 pm - Supriya: <Media omitted>
24/09/2023, 6:36 pm - Supriya: <Media omitted>
24/09/2023, 6:36 pm - Nimisiiyaaaa: 22.....4
24/09/2023, 6:39 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:40 pm - Supriya: <Media omitted>
24/09/2023, 6:51 pm - Supriya: <Media omitted>
24/09/2023, 6:52 pm - Supriya: <Media omitted>
24/09/2023, 6:52 pm - Supriya: <Media omitted>
24/09/2023, 6:52 pm - Supriya: <Media omitted>
24/09/2023, 6:52 pm - Supriya: <Media omitted>
24/09/2023, 6:52 pm - Supriya: <Media omitted>
24/09/2023, 6:52 pm - Supriya: <Media omitted>
24/09/2023, 6:53 pm - Supriya: <Media omitted>
24/09/2023, 6:53 pm - Supriya: <Media omitted>
24/09/2023, 6:53 pm - Supriya: <Media omitted>
24/09/2023, 7:16 pm - Supriya: Find the missing letters in the following series. c_ecc_ce_c_ec_e

Pick ONE option
24/09/2023, 7:16 pm - Supriya: <Media omitted>
25/09/2023, 9:38 am - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: cbnst mai bhi word problem aati h
25/09/2023, 10:00 pm - Nimisiiyaaaa: methods the jo suru kke unse related
25/09/2023, 10:00 pm - Nimisiiyaaaa: [6:25 pm, 09/11/2022] Aashish Kushwaha: Equation di 3 aur phir pucha agr m ye zero krdu to solution aega
[6:25 pm, 09/11/2022] Aashish Kushwaha: Aur agr aega to kyu aega
[6:25 pm, 09/11/2022] Aashish Kushwaha: Programming terms m btao kya glich aega...
[6:25 pm, 09/11/2022] Aashish Kushwaha: Gauss Jordan last loop batao
[6:25 pm, 09/11/2022] Aashish Kushwaha: Non linear method ke naam
[6:25 pm, 09/11/2022] Aashish Kushwaha: Backward substitution ka code
[6:25 pm, 09/11/2022] Aashish Kushwaha: Newton raphson formula
25/09/2023, 10:00 pm - Nimisiiyaaaa: ye viva h
25/09/2023, 10:00 pm - Nimisiiyaaaa: This message was deleted
25/09/2023, 10:00 pm - Nimisiiyaaaa: This message was deleted
25/09/2023, 10:00 pm - Nimisiiyaaaa: This message was deleted
25/09/2023, 10:00 pm - Nimisiiyaaaa: This message was deleted
25/09/2023, 10:00 pm - Nimisiiyaaaa: This message was deleted
25/09/2023, 10:00 pm - Nimisiiyaaaa: The percent return rate of a growth fund, income fund, and money market is 10%, 7%, and 5% respectively. Suppose you have 3200 to invest and you want to put twice as much in the growth fund as in the money market to maximize your return.

How should you invest to get a return of 250 dollars in 1 year?
25/09/2023, 10:00 pm - Nimisiiyaaaa: ek question ye bhi tha
25/09/2023, 10:00 pm - Nimisiiyaaaa: This message was deleted
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:00 pm - Nimisiiyaaaa: <Media omitted>
25/09/2023, 10:04 pm - Nimisiiyaaaa: Ye ques the inki equation banegi phir ek kisi metgod se solve karna h. Agar answer sahi hua tho allow kr denge phir code likhna hai
27/09/2023, 8:44 pm - Supriya: https://unstop.com/competitions/729950/register/edit?utm_campaign=site-emails&utm_medium=d2c-automated&utm_source=one-more-step-to-complete-your-registration-hackon-with-amazon-season-3
28/09/2023, 4:44 pm - Supriya: Given a list of products, you need to find a product with a specific product code and then sort all the products by price in ascending order. The product codes and prices can have any number of digits, and the process needs to be as efficient as possible
28/09/2023, 4:45 pm - Supriya: Which combination of searching and sorting algorithms would you choose to implement to solve this problem efficiently?
28/09/2023, 4:45 pm - Supriya: A: 45, B: 13, C: 12, D: 16, E: 9, F: 5

Which Supriasingharan +918003698632 sequence does this encoded string most supriasingkely +918003698632

2

Question Time Left: 42-

supriasingh1z

491800369863

Total Marks: 20

Answer

You successfully construct the Huffman Tree and get the Huffman Codes for each
28/09/2023, 4:46 pm - Supriya: character. You got 3@gm encoded string: 111111101000100.

Which upriasingh Character sequence does this encoded string most li +918003698632 supriasingly represent
28/09/2023, 4:46 pm - Supriya: <Media omitted>
28/09/2023, 4:47 pm - Nimisiiyaaaa: Yo find the shortest path in an unweighted directed graph with unit length edges, you have used a BFS algorithm. But, due to a glitch in the system, you are now forced to consider that the algorithm can only process a maximum of 100 nodes in its queue at any given time. The graph you are working on has 150 nodes and you have to find the shortest path from Node A to Node Z

How does this limitation affect your implementation?

The BFS will fail because it cannot process all the nodes.

The BFS will succeed, but it will take more time due to the system's queue limitations.

The BFS will not be affected at all, as the algorithm does not depend on the system's queue limitations.

O The BFS will fail to find the shortest path if it exceeds 100 nodes.
28/09/2023, 4:50 pm - Nimisiiyaaaa: Conor a rected graph G with n vertices and medges. Each vertex in G has an noegree greater than zero. Which of the following statements is true about the graph G?

Answer:

OG contains at least one cycle.

G is a complete graph.

OG is a tree.

OG has a Hamiltonian path.
28/09/2023, 4:52 pm - Supriya: You are working on a real-time analytics project that processes large amounts of lot sensor data. The team has chosen to use the K-means clustering algorithm to group sensor data. Your task is to optimize the K-means algorithm to handle the large volume of real data. Which optimization approach would be the most effective?

Use a subset of the data and periodically update centroids. Significantly increase the number of clusters. Use a distributed computing environment. Incorporate a earest neighbor search algorithm. supras
28/09/2023, 4:56 pm - Supriya: What will be the output when the above method is called with a valid binary tree? public int myTree(Node root) { if (root == null) return Integer.MIN_VALUE; int LM= myTree(root.left); int RM)); } Supriasingh12823@gmail.myTree(root.right); re return Math.max(root.data, Math.max(LM,

+918003698632

15

16

18

19

17

20

suprasingh 120

+918003698632

Question Time Left 25

Total Marks: 20

Answer:

supriasingh12823@gmail +918003698632
28/09/2023, 4:57 pm - Supriya: You are designing a network for a large organization, with many different offices and routing nodes between them. You have been tasked to determine the maximum possible data flow from the main server, located at node S, to the remote office located at node T. You are given that the network can be represented as a directed graph where the edges represent data channels and their capacities. 1282 the 1282

In order to optimize the network data flow, you decide to apply the Ford-Fulkerson Sup algorithm. However, the algorithm is known to potentially run indefinitely when irrational numbers are involved in the capacities of the edges. Which of the following changes to the algorithm would most effectively prevent this potential problem?
28/09/2023, 5:04 pm - Nimisiiyaaaa: You have to design a navigation system for an underground metro network in a city. The system should help commuters find the shortest path from their current station to their destination station. You decide to use Dijkstra's algorithm for this task.

What modification to Dijkstra's algorithm is necessary to account for the transfer time between different metro lines at interchange stations?
28/09/2023, 5:15 pm - Nimisiiyaaaa: 2 * 2 Matrix: -6, -3, -42, -21

2 * 2 Matrix: -6, -2, -42, -14

2 * 2 Matrix: 6, 3, 42, 21

2 * 2 Matrix: 6, 2, 42, 14
29/09/2023, 5:19 am - Supriya: <Media omitted>
29/09/2023, 5:21 am - Supriya: Guys jab bhi jagoge to please mere laptop se charger nikal dena
29/09/2023, 9:47 am - Nimisiiyaaaa: <Media omitted>
29/09/2023, 9:47 am - Nimisiiyaaaa: <Media omitted>
29/09/2023, 9:47 am - Nimisiiyaaaa: <Media omitted>
29/09/2023, 9:48 am - Nimisiiyaaaa: Pipeline ke
29/09/2023, 9:56 am - Supriya: <Media omitted>
29/09/2023, 10:03 am - Supriya: Sun 10:30 se start hoga practical
29/09/2023, 10:25 am - Supriya: <Media omitted>
29/09/2023, 10:25 am - Supriya: <Media omitted>
29/09/2023, 10:25 am - Supriya: <Media omitted>
29/09/2023, 10:33 am - Nimisiiyaaaa: 👍🏻
29/09/2023, 11:17 am - Supriya: <Media omitted>
29/09/2023, 11:18 am - Supriya: You deleted this message
29/09/2023, 11:19 am - Supriya: Implement named pipe
29/09/2023, 11:19 am - Supriya: Orphan process
29/09/2023, 11:20 am - Supriya: Bas iska code bhej d e
29/09/2023, 11:20 am - Nimisiiyaaaa: ok
29/09/2023, 11:20 am - Supriya: <Media omitted>
29/09/2023, 11:22 am - Nimisiiyaaaa: #include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>

int main() {
    // Define the path to the named pipe
    const char *pipe_name = "/tmp/my_named_pipe";

    // Create the named pipe (FIFO)
    if (mkfifo(pipe_name, 0666) == -1) {
        perror("mkfifo");
        exit(EXIT_FAILURE);
    }

    printf("Named pipe '%s' created.\n", pipe_name);

    // Open the named pipe for writing
    int fd = open(pipe_name, O_WRONLY);
    if (fd == -1) {
        perror("open");
        exit(EXIT_FAILURE);
    }

    // Write data to the named pipe
    const char *message = "Hello, Named Pipe!";
    if (write(fd, message, strlen(message) + 1) == -1) {
        perror("write");
        close(fd);
        exit(EXIT_FAILURE);
    }

    printf("Data sent to the named pipe.\n");

    // Close the pipe
    close(fd);

    return 0;
}
29/09/2023, 11:22 am - Nimisiiyaaaa: <Media omitted>
29/09/2023, 11:24 am - Nimisiiyaaaa: <Media omitted>
29/09/2023, 11:26 am - Nimisiiyaaaa: Named pipes, also known as FIFOs (First In, First Out), are a type of interprocess communication (IPC) mechanism in Unix-like operating systems. They allow processes to communicate with each other through a file-like interface. Here's a simple example of how to create and use a named pipe in C:
29/09/2023, 11:28 am - Supriya: Q
29/09/2023, 11:32 am - Nimisiiyaaaa: kya
29/09/2023, 11:47 am - Nimisiiyaaaa: queue ka concept lagega
29/09/2023, 4:18 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 4:18 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 4:18 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 4:18 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 4:18 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 4:18 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 4:18 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 4:26 pm - Supriya: <Media omitted>
29/09/2023, 7:07 pm - Supriya: Problem Statement

Given a linked list, the problem is to find the longest integer length of consecutive items in the linked list. The function is to find the longest possible array resulting from an arithmetic operation on the given array and return the array's length.

Constraints:

1 <= n <= 1000

0<= element <= 100000

Input Format

Line one takes the size of the Linked List, and the next line takes linked list elements.

Output Format

Returns the Longest length of arithmetic Progression with consecutive elements in the Linked list.

Sample Testcase #0

Testcase Input

Copy
29/09/2023, 7:08 pm - Supriya: <Media omitted>
29/09/2023, 7:08 pm - Supriya: Testcase Input

Copy

2

5 0 5 10 15 100

Testcase Output

Copy

Explanation

051015 have a common difference as 5, so the longest length of ap is 4.

Sample Testcase #1

Testcase Input

5 12345

Copy

Testcase Output

Copy

Rules

Explanation

Finish

1+2+3+4+5 all have a common difference as 1 so the longest length of ap is 5.
29/09/2023, 7:15 pm - Supriya: Problem Statement

Given an array of size N. Suppose that at any Index 1, the array element is 'x: If x is negative, you have to remove the minimum elements present ju before x such that the sum of those element is greater than or equal to absolute value of x. If the sum of those elements is less than abs(x), remov all elements before x.

After removing those elements, convert x to its absolute value and go to the next Index and perform the same operation.

Return the sum of all elements present in the array after performing the above operation.

Note

You must operate only if 'x' is negative. ⚫ For each new index, consider the modified array for operation.

Constraints

1 <= n <= 100000.

-10000<=A[]<=10000 for all (0<=I<N)

Input Format

The first line contains an Integer N. The second line contains N elements- the array elements.

Output Format

The output should return the final sum after performing the mentioned operation
29/09/2023, 7:15 pm - Supriya: Sample Testcase #10

Testcase Input

2-134-423

Testcase Output

13

Explanation

(abs(-1)+3+abs(-4)+2+3)=13

Sample Testcase #1

Testcase Input

4223-6

Testcase Output

10

Explanation

Given array is 4,2,2,3,-6

5-denotes N 4223-6-denotes the array

First, we push 'a' to stack.
29/09/2023, 7:16 pm - Supriya: Here, indices 0,1,2 and 3 are positive, so there is no need to operate.

Now at index 4, -6 is there. So x=-6.

We delete elements until the sum is less than abs(x), l.e., 6.

The minimum elements whose sum will be greater than or equal to abs(x) are 3(Index-3), 2(index=2), and 2(Index=1). So delete these three elements and convert x to its absolute value.

Now the array will be (4,6).

Rudes

Hence the final answer will be 4+6=10.

So, the result is 10.

Finish
29/09/2023, 7:51 pm - Supriya: Problem Statement

Alice likes the prime number most. Leo gave an array arr of size N to Alice and asked him to determine the maximum distance between the indexes of two prime numbers in the given array. If the array doesn't contain any prime number, then return -1.

Constraints:

1 N $105

1s arr[i] $105

Input Format

The first line contains an integer N, representing the size of arr.

The next line contains N space-separated integers, representing the original array arr.

Output Format

Return -1 if there is no prime number in the given array. Otherwise, return the maximum difference of two prime numbers.
29/09/2023, 7:52 pm - Supriya: Sample Testcase #0

Testcase Input
5

2 3 5 7 11

Testcase Output
4

Explanation

Since all the numbers are prime in the given array, the maximum difference is in the first and last element of the array.

Sample Testcase #1
29/09/2023, 7:53 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 7:53 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 7:53 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 7:53 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 7:53 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 7:53 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 7:54 pm - Supriya: You deleted this message
29/09/2023, 7:54 pm - Supriya: Sample Testcase #1

Testcase Input
3

1 4 8

Testcase Output

-1

Explanation

No number is prime in the given array, so return -1.
29/09/2023, 7:55 pm - Nimisiiyaaaa: You are given an array arr of size n. The array consists of only positive integers. Your task is to find the maximum difference from each index. Here, the Maximum difference is calculated as the absolute difference between the next greater element (if it exists) on the right side and the maximum element on the right side.

Note:

If there is no next greater element at any index, return 0.

Constraints:

1 <= n <= 100000

1 <= arr[i] <= 100000

Input Format

The first line contains a single integer n. 


The second line contains n space-separated integers denoting the array arr.

Output format

Print the integer, i.e., maximum difference. 

Sample Testcase #0

Testcase Input

4

4 1 2 3


Testcase Output

1



Explanation

For each index:

Index 0: no greater element than 4 is present.


Index 1: next greater = 2 and maximum=3. Hence 3-2=1.Hence, 1 is printed.

Sample Testcase #1


Testcase input

4

4 3 2 1

Testcase Output

0

Explanation



For each index:Index 0: no greater element than 4 is present.

Index 1: no greater element than 3 is present.

自 Rules

Index 2: no greater element than 2 is present.

Index 3: no greater element than 1 is present.

Hence, 0 is printed. <This message was edited>
29/09/2023, 7:55 pm - Supriya: Problem Statement

You are given an array arr of size n. The array consists of only positive integers. Your task is to find the maximum difference from each index. Here, the Maximum difference is calculated as the absolute difference between the next greater element (if it exists) on the right side and the maximum element on the right side.

Note:

If there is no next greater element at any index, return 0.

Constraints:

1 <=n<= 100000

1 <= arr[i] <= 100000

Input Format

The first line contains a single Integer n.


Output Format

The second line contains n space-separated integers denoting the array arr.

Print the integer, l.e., maximum difference.
29/09/2023, 7:57 pm - Supriya: Sample Testcase #0

Testcase Input

4

4 1 2 3

Testcase Output

1


Explanation

For each index:

Index 0: no greater element than 4 is present.

Index 1: next greater-2 and maximum-3. Hence 3-2-1.
29/09/2023, 7:59 pm - Supriya: Index 2: next greater-3 and maximum=3. Hence 3-3-0.

Index 3: no greater element than 3 is present.

Hence, 1 is printed.

Sample Testcase #1

Testcase Input

4

4 3 2 1

Testcase Output

0

Explanation

For each index:
29/09/2023, 8:00 pm - Supriya: Index 0: no greater element than 4 is present.

Index 1: no greater element than 3 is present.

Index 2: no greater element than 2 is present.

Index 3: no greater element than 1 is present.

Hence, 0 is printed.
29/09/2023, 8:36 pm - Supriya: Problem Statement

Count the number of ways to distribute toy cars among 3 children such that each child should not have more than K toy cars, and the total number of distributed toy cars equals S.

Constraints:

•2≤K≤5 10^3

.0≤S $3⭑K

Input Format

The input consists of 2 lines.

The first input line contains an integer, l.e., K.

The second input line contains an integer, Le,S.

Output Format

Print the number of ways to distribute toy cars among 3 children.
29/09/2023, 8:36 pm - Supriya: Sample Testcase #0

Testcase Input

Copy

Testcase Output

7

8

9

Copy

12

Explanation

K=2 and S=2

Let C1 = first child, C2= second child, C3 = third child.

C1, C2, C3=((0, 0, 2), (0, 2, 0), (2, 0, 0), (0, 1, 1), (1, 0, 1), (1, 1, 0))

So, there are 6 ways to distribute toy cars.

Sample Testcase #1

Testcase Input

15

Testcase Output
29/09/2023, 8:36 pm - Supriya: Let C1 first child, C2 = second child, C3 = third child.

C1, C2, C3={(0, 0, 2), (0, 2, 0), (2, 0, 0), (0, 1, 1), (1, 0, 1), (1, 1, 0))

So, there are 6 ways to distribute toy cars.

Sample Testcase #1

Testcase Input

5 15

Testcase Output

1

Explanation

K=5 and S=15

Rules

Only possible way is (5,5,5).
29/09/2023, 8:37 pm - Nimisiiyaaaa: Problem Statement

Tech Curator has a hierarchical structure with V members working under one another. The IT department has provided you with a list of immediate bosses, but it's up to you to determine the full hierarchy using this Information.

You need to find the number of employees working under every boss.

#include <cmath>

#include <cstdio>

#include <vector>

#include <iostream>

#include <algorithm>

using namespace std;

Example:

int main() {

Input:

/* Enter your code here.

return 0;

}

1

2

3

4

2

6

7

10

11

12

5

1133

Output:

40200

Explanation:

The Tree will look like this:Input Format

1 #include <cmath>

2

3

4

5

6

7

8

The input contains a single Integer V, representing the number of employees in the organisation.

2

The second line of the input consists of V-1 Integers, e1, e2, 83,..., eV-1. Here, el represents the boss of the (i+1)th employee in the organisation's hierarchical structure.

using namespace st

Output Format

You should Print V integers n1, n2... Nv where ni represents the number of employees working under ith employee.

9

int main() {

10

11

/* Enter your return 0;

}

12

#include <cstdio>

#include <vector>

#include <iostream

#include <algorith

Constraints:

1<=V<=2+1e5

1<=e[]<=V

Sample Testcase #O

Testcase Input

2 1

Testcase Output

Copy

Copy

10Explanation

The Tree will look like this: 1-2

18

11

Sample Testcase #1

12

Testcase Input

Copy

5 1133

Testcase Output

40200

Copy

Explanation

The Tree will look like this:

2 3

4
29/09/2023, 8:38 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 8:38 pm - Nimisiiyaaaa: <Media omitted>
29/09/2023, 8:38 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:20 pm - Nimisiiyaaaa: **SS Videos:-**

0. https://www.youtube.com/watch?v=1fI7wKN8Z4I
1. https://www.youtube.com/watch?v=n8B0FrFqwnI
2. https://www.youtube.com/watch?v=crFgvpvFfEk
3. https://www.youtube.com/watch?v=sBq-ZO9epKg
4. https://www.youtube.com/watch?v=oZKT_SwWfgE
5. https://www.youtube.com/watch?v=1mqZtaK70wY
6. https://www.youtube.com/watch?v=-eQPS05K_T4
7. https://www.youtube.com/watch?v=eGYoah91NkE
8. https://www.youtube.com/watch?v=AhNyMwqrK5o
9. https://www.youtube.com/watch?v=P8Ih4RjKdPA
10. https://www.youtube.com/watch?v=38w65l9IwQE
11. https://www.youtube.com/watch?v=7pwf20wYw_Q
12. https://www.youtube.com/watch?v=ru6Q2OvYkq4
13. https://www.youtube.com/watch?v=5dZy6pZC9qA
14. https://www.youtube.com/watch?v=KYOilKy5CWo
15. https://www.youtube.com/watch?v=0O5PmvK4TKI
16. https://www.youtube.com/watch?v=ouvebSPw4LU
17. https://www.youtube.com/watch?v=47MCAKMm_Mk
18. https://www.youtube.com/watch?v=DXs2q5KW1pc
19. https://www.youtube.com/watch?v=JFL7whnLNbU
20. https://www.youtube.com/watch?v=JLrjtpZwFNU
21. https://www.youtube.com/watch?v=PiuHHgsAOuU
22. https://www.youtube.com/watch?v=UgeCs0sagg8
23. https://www.youtube.com/watch?v=TWl4lrxGYjY
24. https://www.youtube.com/watch?v=v1doJvJnFyo
25. https://www.youtube.com/watch?v=zJr988ebk9g
26. https://www.youtube.com/watch?v=rJHXxA8Ylvw
27. https://www.youtube.com/watch?v=ZBpTmpdNbY0
30/09/2023, 1:23 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:27 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:27 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:27 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:27 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 1:28 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 3:43 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 3:43 pm - Nimisiiyaaaa: <Media omitted>
30/09/2023, 3:50 pm - Nimisiiyaaaa: This message was deleted
01/10/2023, 2:07 pm - Supriya: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 2:58 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 3:00 pm - Supriya: https://drive.google.com/drive/u/0/mobile/folders/1WuxcNxGSQDxvO2frIXrM8Lg_Z0QDweHa?usp=share_link
01/10/2023, 5:13 pm - Nimisiiyaaaa: This message was deleted
01/10/2023, 5:20 pm - Nimisiiyaaaa: <Media omitted>
01/10/2023, 11:47 pm - Nimisiiyaaaa: This message was deleted
02/10/2023, 12:24 pm - Nimisiiyaaaa: <Media omitted>
02/10/2023, 12:25 pm - You changed the group name from "Kem chho maza ma 😭🫂" to "Kem chho 😭🫂"
02/10/2023, 5:47 pm - Nimisiiyaaaa: This message was deleted
03/10/2023, 12:24 am - You changed this group's icon
03/10/2023, 12:50 am - Nimisiiyaaaa: <Media omitted>
03/10/2023, 11:14 pm - Nimisiiyaaaa: Providing the static address to the program during the assembling of the program is not best way in terms of multiprogramming. Suggest an alternative of this that will increase the efficiency of the multiprogramming system. Justify, how the suggestéd method is more efficient with example. Explain the suitable changes required in object  program for the same.

ChatGPT
The limitation of providing a static address to a program during assembling restricts flexibility in multiprogramming environments. The alternative, which enhances the efficiency of multiprogramming systems, is to use relocatable code.

Relocatable Code:
Relocatable code does not have absolute addresses. Instead, it contains information that allows a loader or linker to modify the code, at load time or link time, to run at any memory location.relocatable addressing facilitates dynamic and efficient memory allocation. 

Justification with Example:
Imagine two programs, P1 and P2. If both are assembled for a fixed starting address, say 1000, they cannot be loaded into memory simultaneously without one overwriting the other. However, if P1 and P2 are assembled as relocatable programs, they can be loaded at non-conflicting memory locations, even if both were originally assembled with a starting address of 1000.

For instance:

P1 is loaded at address 1000.
P2, though assembled for 1000, is relocated and loaded at 2000 or any other available location.                                                                                                                                                                             
                                                                                                                                                                                                                                                                               Changes Required in the Object Program:
Modification Records: These records indicate which parts of the code need modification when the code is relocated. It tells the loader or linker how to modify addresses in the code based on where the program is loaded in memory.

Symbol Table: In cases where separate modules of a program are compiled independently, a symbol table is essential. This table allows the loader or linker to resolve external references. For example, a call in one module to a function in another module needs to have the correct address of the function, which is provided by the symbol table.

Relocation Bits: Some object formats use relocation bits for each address in the code. A relocation bit specifies whether the associated address is absolute (no modification needed) or relocatable (modification required).

External Definitions and References: If a program is split into multiple modules, there might be definitions in one module that are used in another. These are noted in the object code, so the loader or linker can connect the references with the correct addresses.

In conclusion, by using relocatable code in a multiprogramming environment, it's possible to efficiently utilize memory by dynamically allocating space to programs based on current availability. This ensures that multiple programs can coexist in memory without conflicts, making the system more flexible and efficient. <This message was edited>
03/10/2023, 11:42 pm - Nimisiiyaaaa: <Media omitted>
04/10/2023, 12:41 am - Nimisiiyaaaa: This message was deleted
04/10/2023, 12:42 am - Nimisiiyaaaa: <Media omitted>
04/10/2023, 12:42 am - Nimisiiyaaaa: <Media omitted>
04/10/2023, 12:43 am - Nimisiiyaaaa: This message was deleted
04/10/2023, 12:44 am - Nimisiiyaaaa: <Media omitted>
04/10/2023, 12:45 am - Nimisiiyaaaa: <Media omitted>
04/10/2023, 9:23 am - Nimisiiyaaaa: <Media omitted>
04/10/2023, 9:23 am - Nimisiiyaaaa: <Media omitted>
04/10/2023, 9:23 am - Nimisiiyaaaa: <Media omitted>
04/10/2023, 12:08 pm - Supriya: <Media omitted>
04/10/2023, 12:08 pm - Supriya: <Media omitted>
04/10/2023, 12:08 pm - Supriya: <Media omitted>
04/10/2023, 5:18 pm - Nimisiiyaaaa: This message was deleted
04/10/2023, 9:02 pm - Supriya: <Media omitted>
04/10/2023, 11:01 pm - Nimisiiyaaaa: <Media omitted>
05/10/2023, 9:08 am - Supriya: <Media omitted>
05/10/2023, 9:08 am - Supriya: <Media omitted>
05/10/2023, 9:08 am - Supriya: <Media omitted>
05/10/2023, 9:10 am - Supriya: <Media omitted>
05/10/2023, 9:10 am - Supriya: <Media omitted>
05/10/2023, 9:10 am - Supriya: <Media omitted>
05/10/2023, 8:39 pm - Nimisiiyaaaa: <Media omitted>
06/10/2023, 4:08 am - Nimisiiyaaaa: <Media omitted>
06/10/2023, 9:16 am - Supriya: <Media omitted>
06/10/2023, 3:06 pm - Supriya: <Media omitted>
06/10/2023, 9:15 pm - Nimisiiyaaaa: SDET Internship - Frontend at CRED - Learn and earn together! - https://unstop.com/o/ZvEof08&utm_medium=Share&utm_source=WhatsApp
07/10/2023, 9:10 am - Nimisiiyaaaa: chopping" refers to the truncation of numbers, especially in floating-point arithmetic operations. It is the act of discarding some of the least significant digits of a number without any rounding. This process is used to fit a number within a fixed number of bits or digits.
"Chopping" in the context of computer-based numerical and statistical techniques refers to the truncation of numerical values beyond a certain point, usually due to the limited precision of computer hardware.

It occurs when:

Numbers are represented in a computer with a fixed number of digits.
The representation exceeds the allowable precision.
During arithmetic operations where intermediate or final results have more digits than can be stored.
07/10/2023, 9:11 am - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:26 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:26 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:26 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:26 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:26 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:27 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:27 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:27 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:27 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:27 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:27 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:27 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 7:36 pm - Nimisiiyaaaa: <Media omitted>
09/10/2023, 8:03 pm - Supriya: 45.116.207.204/Moodle
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
09/10/2023, 9:23 pm - Supriya: <Media omitted>
10/10/2023, 5:50 am - Supriya: Topics for career skill paper.               Ages, Clocks,  Calendars, and Chain rule, no averages
10/10/2023, 5:50 am - Supriya: Dear All.
There will be 3 sections in Your Midterm Career Skills Exam.One Section Will Have RCs and the other two will have other verbal questions from topics Sentence Completion, Subject Verb Agreement and Conditionals and Quant.
All 3 sections are compulsory.
11/10/2023, 8:28 am - Supriya: <Media omitted>
11/10/2023, 8:29 am - Supriya: <Media omitted>
11/10/2023, 8:41 am - Nimisiiyaaaa: Hello
11/10/2023, 8:46 am - Nimisiiyaaaa: This message was deleted
11/10/2023, 8:46 am - Nimisiiyaaaa: This message was deleted
11/10/2023, 8:51 am - Supriya: Streamlit stood out because of its simplicity and Python-native approach.By choosing Streamlit, I was able to focus on the core data processing and visualization aspects of my project, resulting in faster development
11/10/2023, 8:53 am - Supriya: We picked Streamlit for our project because it's easy to set up and is especially good for data-focused apps. Compared to Django and Flask, Streamlit let us build and show our ideas quickly. It's straightforward for data visualization and adding interactive features, which were important for our project. While Django and Flask are great and offer many features, Streamlit was just the right fit for what we needed to do
11/10/2023, 8:54 am - Supriya: I developed a Java quiz application using AWT and Swing. It features a unique automatic timer for each question and offers dynamic question rendering. I integrated user authentication and a scoring system, ensuring both engagement and security
11/10/2023, 8:57 am - Nimisiiyaaaa: Check her inbox
11/10/2023, 8:58 am - Nimisiiyaaaa: Be active on WhatsApp ok
11/10/2023, 8:59 am - Supriya: Ok
11/10/2023, 8:59 am - Supriya: I was team meating
11/10/2023, 8:59 am - Supriya: Checking
11/10/2023, 8:59 am - Nimisiiyaaaa: Okay
11/10/2023, 8:59 am - Nimisiiyaaaa: But ch3ck normal message too
11/10/2023, 9:00 am - Supriya: Tell her to check her indox
11/10/2023, 9:00 am - Nimisiiyaaaa: You have her pgone
11/10/2023, 9:00 am - Supriya: This team has my email Id
11/10/2023, 9:00 am - Nimisiiyaaaa: Phone
11/10/2023, 9:00 am - Nimisiiyaaaa: Array
11/10/2023, 9:00 am - Nimisiiyaaaa: No. Pe jo msg aata hai
11/10/2023, 9:00 am - Supriya: She has not registered her email id yet
11/10/2023, 9:00 am - Nimisiiyaaaa: Jaise tujhe aaya tha
11/10/2023, 9:00 am - Supriya: Ok
11/10/2023, 9:00 am - Nimisiiyaaaa: Yes
11/10/2023, 9:01 am - Nimisiiyaaaa: Started
11/10/2023, 9:05 am - Nimisiiyaaaa: Resnet 15 model
11/10/2023, 9:05 am - Nimisiiyaaaa: What are the parameters you considered
11/10/2023, 9:05 am - Nimisiiyaaaa: Supriya tu check kyun nahi kar rahi whatsapp
11/10/2023, 9:07 am - Supriya: bhayii maine notisfication me dekha tha
11/10/2023, 9:07 am - Nimisiiyaaaa: Okay
11/10/2023, 9:07 am - Supriya: pdf me tha iska ns
11/10/2023, 9:07 am - Supriya: nhi
11/10/2023, 9:08 am - Nimisiiyaaaa: ..
11/10/2023, 9:09 am - Nimisiiyaaaa: Given an input suppose he want to generate colunm name based on that input
11/10/2023, 9:09 am - Nimisiiyaaaa: It should be in alphabetical order
11/10/2023, 9:09 am - Nimisiiyaaaa: We give input as set of variables
11/10/2023, 9:10 am - Supriya: Is it the question?
11/10/2023, 9:10 am - Supriya: Coding question?
11/10/2023, 9:11 am - Nimisiiyaaaa: Yes
11/10/2023, 9:11 am - Nimisiiyaaaa: He is sayin
11/10/2023, 9:12 am - Nimisiiyaaaa: You will be given input n as a no.  And giving string so output will be n no. Of columns with character of string as name of excel column
11/10/2023, 9:14 am - Nimisiiyaaaa: N=60
String = abcdefg
So count is 60 so column name generated will be a b c d e f g then again ab ac ad... Then bc bd... If still count not 60 abc abd abe.... Bcd... cde..... So on Until count is 60 <This message was edited>
11/10/2023, 9:17 am - Nimisiiyaaaa: You understood right
11/10/2023, 9:17 am - Supriya: yes
11/10/2023, 9:17 am - Nimisiiyaaaa: Supriya i edited the example check it
11/10/2023, 9:17 am - Nimisiiyaaaa: Let me know if you have checked
11/10/2023, 9:18 am - Supriya: I checked it
11/10/2023, 9:18 am - Nimisiiyaaaa: Okay
11/10/2023, 9:19 am - Supriya: output should be like this    Generated Columns:
a b c d e f g ab ac ad ae af ag bc bd be bf bg cd ce cf cg de df dg ef eg fg abc abd abe abf abg ace acf acg ade adf adg aef aeg afg bcd bce bcf bcg bde bdf bdg bef beg bfg cde cdf cdg cef ceg cfg def deg dfg efg abcd abc
11/10/2023, 9:19 am - Supriya: ??
11/10/2023, 9:20 am - Nimisiiyaaaa: Yes ye
11/10/2023, 9:23 am - Nimisiiyaaaa: It can also be aa
11/10/2023, 9:23 am - Supriya: void generateCombinations(const std::string &s, int start, int len, const std::string &curr, std::vector<std::string> &result, int &count, int n) {
    if (count >= n) return;
    if (len == 0) {
        result.push_back(curr);
        count++;
        return;
    }
    for (int i = start; i <= s.size() - len; i++) {
        generateCombinations(s, i + 1, len - 1, curr + s[i], result, count, n);
    }
}

std::vector<std::string> generateColumnNames(const std::string &s, int n) {
    std::vector<std::string> result;
    int count = 0;
    for (int len = 1; len <= s.size() && count < n; len++) {
        generateCombinations(s, 0, len, "", result, count, n);
    }
    return result;
}
11/10/2023, 9:23 am - Nimisiiyaaaa: We can start with aa also for no left
11/10/2023, 9:23 am - Supriya: What??
11/10/2023, 9:24 am - Nimisiiyaaaa: If it is for bb bc bd be...
11/10/2023, 9:24 am - Nimisiiyaaaa: cc cd ce....
11/10/2023, 9:24 am - Supriya: a b c d e f g aa ab ac ad ae af ag bb bc bd be bf bg cc cd
11/10/2023, 9:24 am - Nimisiiyaaaa: Matlab khudke saath be pair ban sakta hai
11/10/2023, 9:24 am - Supriya: like this
11/10/2023, 9:24 am - Nimisiiyaaaa: Yes
11/10/2023, 9:25 am - Nimisiiyaaaa: Approch batade use
11/10/2023, 9:25 am - Nimisiiyaaaa: Pehle code se pehle
11/10/2023, 9:26 am - Supriya: Ok
11/10/2023, 9:26 am - Supriya: let me check first
11/10/2023, 9:26 am - Nimisiiyaaaa: Jaldi sir brute force pooch rahe hain
11/10/2023, 9:26 am - Supriya: #include <iostream>
#include <vector>
#include <string>

std::vector<std::string> generateColumnNames(const std::string& s, int n) {
    std::vector<std::string> result;

    // Single characters
    for (char ch : s) {
        result.push_back(std::string(1, ch));
        if (result.size() == n) return result;
    }

    // Pairs
    for (char i : s) {
        for (char j : s) {
            if (i <= j) {
                result.push_back(std::string(1, i) + j);
                if (result.size() == n) return result;
            }
        }
    }
    
    // You can continue this pattern for triples, etc. if needed

    return result;
}

int main() {
    int n;
    std::string input;

    std::cout << "Enter n: ";
    std::cin >> n;
    std::cin.ignore();  // Handle newline after n

    std::cout << "Enter string: ";
    getline(std::cin, input);

    std::vector<std::string> columns = generateColumnNames(input, n);

    std::cout << "Generated Columns:\n";
    for (const auto &col : columns) {
        std::cout << col << " ";
    }

    return 0;
}
11/10/2023, 9:26 am - Nimisiiyaaaa: Poochle gpt se explaination for approach
11/10/2023, 9:28 am - Nimisiiyaaaa: Usne recurrsive approach batayi
11/10/2023, 9:28 am - Nimisiiyaaaa: Uska implementation bol rahe hain
11/10/2023, 9:28 am - Supriya: Shi hai wo?
11/10/2023, 9:28 am - Nimisiiyaaaa: Patani
11/10/2023, 9:28 am - Nimisiiyaaaa: Aur tu code ka screen shot  bhej
11/10/2023, 9:28 am - Supriya: <Media omitted>
11/10/2023, 9:29 am - Nimisiiyaaaa: Jaldi recursive wala bhi
11/10/2023, 9:29 am - Nimisiiyaaaa: With main() <This message was edited>
11/10/2023, 9:29 am - Supriya: Approach smjhau apna aur nhi
11/10/2023, 9:29 am - Nimisiiyaaaa: No
11/10/2023, 9:29 am - Supriya: Ok
11/10/2023, 9:29 am - Nimisiiyaaaa: Bol le ek baar
11/10/2023, 9:30 am - Nimisiiyaaaa: Wo apni approach ka code likh rahi hai
11/10/2023, 9:30 am - Nimisiiyaaaa: Kya pata bolde sir ko
11/10/2023, 9:30 am - Supriya: Ok
11/10/2023, 9:30 am - Nimisiiyaaaa: Ek aur aayi hai
11/10/2023, 9:30 am - Nimisiiyaaaa: Par recursive ka cod3 bhi bhej de
11/10/2023, 9:30 am - Supriya: Mai wo approach sun nhi payi
11/10/2023, 9:30 am - Nimisiiyaaaa: Chod
11/10/2023, 9:30 am - Nimisiiyaaaa: Recursive ka code bhej
11/10/2023, 9:30 am - Nimisiiyaaaa: Jaldi
11/10/2023, 9:31 am - Nimisiiyaaaa: Bahut time le loya usne
11/10/2023, 9:31 am - Nimisiiyaaaa: Iska main bhi bhej
11/10/2023, 9:32 am - Supriya: void generateSequences(const std::string &input, int pos, const std::string &current, std::vector<std::string> &results, int n) {
    if (results.size() == n) return;

    if (current.length() > 0) {
        results.push_back(current);
    }

    for (int i = pos; i < input.size(); i++) {
        generateSequences(input, i, current + input[i], results, n);
    }
}

std::vector<std::string> generateColumnNames(const std::string &input, int n) {
    std::vector<std::string> results;
    generateSequences(input, 0, "", results, n);
    return results;
}
11/10/2023, 9:32 am - Supriya: <Media omitted>
11/10/2023, 9:33 am - Supriya: Approach btau use ya phir wo apna hi approach likh rhi hai?
11/10/2023, 9:34 am - Supriya: Bata use apni approach
11/10/2023, 9:34 am - Supriya: Jaldi
11/10/2023, 9:36 am - Supriya: Bata tu
11/10/2023, 9:36 am - Supriya: Maine use code de diya tera wala
11/10/2023, 9:39 am - Supriya: Abe diksha pooch rahi hai tera koi interview chalra
11/10/2023, 9:39 am - Supriya: Jhoot bol diyo
11/10/2023, 9:39 am - Supriya: Kuch bhi
11/10/2023, 9:40 am - Supriya: Chatgpt bas pair tak ka de rha hai
11/10/2023, 9:43 am - Supriya: <Media omitted>
11/10/2023, 9:43 am - Supriya: Usme bas pair tak hi hai
11/10/2023, 9:49 am - Supriya: Cam we take a to z
11/10/2023, 5:54 pm - Supriya: Hiiiii <This message was edited>
